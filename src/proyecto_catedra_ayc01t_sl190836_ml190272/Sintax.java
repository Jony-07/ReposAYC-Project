
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Nov 16 02:20:06 CST 2021
//----------------------------------------------------

package proyecto_catedra_ayc01t_sl190836_ml190272;

import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Nov 16 02:20:06 CST 2021
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\211\000\002\002\004\000\002\002\005\000\002\002" +
    "\004\000\002\002\010\000\002\002\011\000\002\002\012" +
    "\000\002\002\013\000\002\002\014\000\002\002\015\000" +
    "\002\002\016\000\002\002\017\000\002\002\020\000\002" +
    "\002\021\000\002\002\022\000\002\002\024\000\002\002" +
    "\025\000\002\002\026\000\002\002\027\000\002\002\030" +
    "\000\002\002\031\000\002\002\032\000\002\002\033\000" +
    "\002\002\034\000\002\002\035\000\002\002\036\000\002" +
    "\002\037\000\002\002\040\000\002\002\041\000\002\002" +
    "\042\000\002\002\043\000\002\002\044\000\002\002\045" +
    "\000\002\002\046\000\002\002\047\000\002\002\050\000" +
    "\002\002\051\000\002\002\052\000\002\002\053\000\002" +
    "\002\054\000\002\002\055\000\002\002\056\000\002\002" +
    "\057\000\002\002\060\000\002\002\061\000\002\002\062" +
    "\000\002\002\063\000\002\002\064\000\002\002\065\000" +
    "\002\002\007\000\002\002\007\000\002\002\005\000\002" +
    "\002\005\000\002\002\005\000\002\002\006\000\002\002" +
    "\007\000\002\002\010\000\002\002\011\000\002\002\012" +
    "\000\002\002\013\000\002\002\014\000\002\005\006\000" +
    "\002\005\006\000\002\005\007\000\002\004\014\000\002" +
    "\004\022\000\002\004\030\000\002\004\036\000\002\004" +
    "\044\000\002\004\052\000\002\004\060\000\002\004\066" +
    "\000\002\004\074\000\002\004\102\000\002\004\110\000" +
    "\002\004\116\000\002\004\124\000\002\004\132\000\002" +
    "\004\140\000\002\004\146\000\002\004\154\000\002\004" +
    "\162\000\002\004\170\000\002\004\176\000\002\004\204" +
    "\000\002\004\047\000\002\004\037\000\002\004\031\000" +
    "\002\004\030\000\002\004\036\000\002\004\037\000\002" +
    "\004\045\000\002\004\044\000\002\004\053\000\002\004" +
    "\052\000\002\004\061\000\002\004\060\000\002\004\067" +
    "\000\002\004\066\000\002\004\075\000\002\004\074\000" +
    "\002\004\016\000\002\004\024\000\002\004\033\000\002" +
    "\004\043\000\002\004\053\000\002\004\063\000\002\004" +
    "\073\000\002\004\103\000\002\004\113\000\002\004\123" +
    "\000\002\004\133\000\002\004\025\000\002\004\035\000" +
    "\002\004\044\000\002\004\054\000\002\004\063\000\002" +
    "\004\073\000\002\004\102\000\002\004\112\000\002\004" +
    "\121\000\002\004\131\000\002\011\010\000\002\006\012" +
    "\000\002\006\041\000\002\006\060\000\002\006\075\000" +
    "\002\006\113\000\002\006\131\000\002\006\061\000\002" +
    "\006\107\000\002\006\042\000\002\006\061\000\002\006" +
    "\076\000\002\006\114\000\002\006\132\000\002\006\062" +
    "\000\002\006\110" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02b1\000\006\007\004\012\006\001\002\000\004\010" +
    "\u0282\001\002\000\004\002\u0281\001\002\000\004\160\007" +
    "\001\002\000\014\002\uffff\007\010\011\013\014\016\033" +
    "\012\001\002\000\004\013\272\001\002\000\004\002\uffcf" +
    "\001\002\000\004\036\045\001\002\000\004\010\043\001" +
    "\002\000\004\002\uffce\001\002\000\006\002\uffcd\033\012" +
    "\001\002\000\006\015\017\160\020\001\002\000\004\016" +
    "\023\001\002\000\004\016\021\001\002\000\004\160\022" +
    "\001\002\000\004\002\uffc4\001\002\000\004\160\024\001" +
    "\002\000\006\002\uffc5\017\025\001\002\000\004\160\027" +
    "\001\002\000\004\002\uffc3\001\002\000\004\031\030\001" +
    "\002\000\004\020\031\001\002\000\004\160\032\001\002" +
    "\000\004\020\033\001\002\000\004\002\uff88\001\002\000" +
    "\006\002\uffcc\033\012\001\002\000\006\002\uffcb\033\012" +
    "\001\002\000\006\002\uffca\033\012\001\002\000\006\002" +
    "\uffc9\033\012\001\002\000\006\002\uffc8\033\012\001\002" +
    "\000\006\002\uffc7\033\012\001\002\000\004\002\uffc6\001" +
    "\002\000\004\160\044\001\002\000\004\002\uffd0\001\002" +
    "\000\004\160\046\001\002\000\004\040\047\001\002\000" +
    "\004\021\050\001\002\000\006\020\051\160\052\001\002" +
    "\000\004\160\055\001\002\000\004\160\053\001\002\000" +
    "\004\022\054\001\002\000\006\002\uff87\033\uff87\001\002" +
    "\000\004\020\056\001\002\000\004\161\057\001\002\000" +
    "\004\020\060\001\002\000\004\160\061\001\002\000\004" +
    "\020\062\001\002\000\004\161\063\001\002\000\004\020" +
    "\064\001\002\000\004\160\065\001\002\000\004\020\066" +
    "\001\002\000\006\022\070\161\067\001\002\000\004\020" +
    "\204\001\002\000\004\161\071\001\002\000\004\021\072" +
    "\001\002\000\004\020\073\001\002\000\004\160\074\001" +
    "\002\000\004\020\075\001\002\000\004\161\076\001\002" +
    "\000\004\020\077\001\002\000\004\160\100\001\002\000" +
    "\004\020\101\001\002\000\004\161\102\001\002\000\004" +
    "\020\103\001\002\000\004\160\104\001\002\000\004\020" +
    "\105\001\002\000\004\022\106\001\002\000\012\002\uff86" +
    "\033\uff86\133\110\161\107\001\002\000\004\021\111\001" +
    "\002\000\006\002\uff7f\033\uff7f\001\002\000\004\020\112" +
    "\001\002\000\004\160\113\001\002\000\004\020\114\001" +
    "\002\000\004\161\115\001\002\000\004\020\116\001\002" +
    "\000\004\160\117\001\002\000\004\020\120\001\002\000" +
    "\004\161\121\001\002\000\004\020\122\001\002\000\004" +
    "\160\123\001\002\000\004\020\124\001\002\000\004\022" +
    "\125\001\002\000\004\161\126\001\002\000\012\002\uff85" +
    "\021\127\033\uff85\133\130\001\002\000\004\020\131\001" +
    "\002\000\006\002\uff7e\033\uff7e\001\002\000\004\160\132" +
    "\001\002\000\004\020\133\001\002\000\004\161\134\001" +
    "\002\000\004\020\135\001\002\000\004\160\136\001\002" +
    "\000\004\020\137\001\002\000\004\161\140\001\002\000" +
    "\004\020\141\001\002\000\004\160\142\001\002\000\004" +
    "\020\143\001\002\000\004\022\144\001\002\000\012\002" +
    "\uff84\033\uff84\133\146\161\145\001\002\000\004\021\147" +
    "\001\002\000\006\002\uff7d\033\uff7d\001\002\000\004\020" +
    "\150\001\002\000\004\160\151\001\002\000\004\020\152" +
    "\001\002\000\004\161\153\001\002\000\004\020\154\001" +
    "\002\000\004\160\155\001\002\000\004\020\156\001\002" +
    "\000\004\161\157\001\002\000\004\020\160\001\002\000" +
    "\004\160\161\001\002\000\004\020\162\001\002\000\004" +
    "\022\163\001\002\000\012\002\uff83\033\uff83\133\165\161" +
    "\164\001\002\000\004\021\166\001\002\000\006\002\uff7c" +
    "\033\uff7c\001\002\000\004\020\167\001\002\000\004\160" +
    "\170\001\002\000\004\020\171\001\002\000\004\161\172" +
    "\001\002\000\004\020\173\001\002\000\004\160\174\001" +
    "\002\000\004\020\175\001\002\000\004\161\176\001\002" +
    "\000\004\020\177\001\002\000\004\160\200\001\002\000" +
    "\004\020\201\001\002\000\004\022\202\001\002\000\010" +
    "\002\uff82\033\uff82\133\203\001\002\000\006\002\uff7b\033" +
    "\uff7b\001\002\000\004\160\205\001\002\000\004\020\206" +
    "\001\002\000\004\161\207\001\002\000\004\020\210\001" +
    "\002\000\004\160\211\001\002\000\004\020\212\001\002" +
    "\000\004\022\213\001\002\000\004\161\214\001\002\000" +
    "\004\021\215\001\002\000\004\020\216\001\002\000\004" +
    "\160\217\001\002\000\004\020\220\001\002\000\004\161" +
    "\221\001\002\000\004\020\222\001\002\000\004\160\223" +
    "\001\002\000\004\020\224\001\002\000\004\161\225\001" +
    "\002\000\004\020\226\001\002\000\004\160\227\001\002" +
    "\000\004\020\230\001\002\000\004\161\231\001\002\000" +
    "\004\020\232\001\002\000\004\160\233\001\002\000\004" +
    "\020\234\001\002\000\004\161\235\001\002\000\004\020" +
    "\236\001\002\000\004\160\237\001\002\000\004\020\240" +
    "\001\002\000\004\022\241\001\002\000\012\002\uff81\033" +
    "\uff81\133\243\161\242\001\002\000\004\021\244\001\002" +
    "\000\006\002\uff7a\033\uff7a\001\002\000\004\020\245\001" +
    "\002\000\004\160\246\001\002\000\004\020\247\001\002" +
    "\000\004\161\250\001\002\000\004\020\251\001\002\000" +
    "\004\160\252\001\002\000\004\020\253\001\002\000\004" +
    "\161\254\001\002\000\004\020\255\001\002\000\004\160" +
    "\256\001\002\000\004\020\257\001\002\000\004\161\260" +
    "\001\002\000\004\020\261\001\002\000\004\160\262\001" +
    "\002\000\004\020\263\001\002\000\004\161\264\001\002" +
    "\000\004\020\265\001\002\000\004\160\266\001\002\000" +
    "\004\020\267\001\002\000\004\022\270\001\002\000\010" +
    "\002\uff80\033\uff80\133\271\001\002\000\006\002\uff79\033" +
    "\uff79\001\002\000\004\160\273\001\002\000\004\021\274" +
    "\001\002\000\004\160\275\001\002\000\004\006\276\001" +
    "\002\000\004\021\277\001\002\000\004\162\300\001\002" +
    "\000\004\022\301\001\002\000\010\022\303\120\304\161" +
    "\302\001\002\000\004\160\u01f6\001\002\000\006\002\uffc2" +
    "\007\uffc2\001\002\000\004\122\305\001\002\000\010\022" +
    "\307\123\310\161\306\001\002\000\004\160\324\001\002" +
    "\000\006\002\uff9d\007\uff9d\001\002\000\004\122\311\001" +
    "\002\000\004\021\312\001\002\000\004\160\313\001\002" +
    "\000\004\022\314\001\002\000\004\146\315\001\002\000" +
    "\004\160\316\001\002\000\004\021\317\001\002\000\004" +
    "\160\320\001\002\000\004\022\321\001\002\000\004\022" +
    "\322\001\002\000\010\002\uffaa\007\uffaa\133\323\001\002" +
    "\000\006\002\uffab\007\uffab\001\002\000\004\006\325\001" +
    "\002\000\004\021\326\001\002\000\004\162\327\001\002" +
    "\000\006\022\331\161\330\001\002\000\004\160\u01a6\001" +
    "\002\000\014\022\333\030\335\044\336\123\334\161\332" +
    "\001\002\000\004\160\u014d\001\002\000\006\002\uff9c\007" +
    "\uff9c\001\002\000\004\122\u0142\001\002\000\004\044\u012d" +
    "\001\002\000\006\022\340\161\337\001\002\000\004\160" +
    "\341\001\002\000\006\002\uff92\007\uff92\001\002\000\004" +
    "\006\342\001\002\000\004\021\343\001\002\000\004\162" +
    "\344\001\002\000\004\022\345\001\002\000\004\030\346" +
    "\001\002\000\004\044\347\001\002\000\006\022\351\161" +
    "\350\001\002\000\004\160\352\001\002\000\006\002\uff91" +
    "\007\uff91\001\002\000\004\006\353\001\002\000\004\021" +
    "\354\001\002\000\004\162\355\001\002\000\004\022\356" +
    "\001\002\000\004\044\357\001\002\000\006\022\361\161" +
    "\360\001\002\000\004\160\362\001\002\000\006\002\uff90" +
    "\007\uff90\001\002\000\004\006\363\001\002\000\004\021" +
    "\364\001\002\000\004\162\365\001\002\000\004\022\366" +
    "\001\002\000\004\030\367\001\002\000\004\044\370\001" +
    "\002\000\006\022\372\161\371\001\002\000\004\160\373" +
    "\001\002\000\006\002\uff8f\007\uff8f\001\002\000\004\006" +
    "\374\001\002\000\004\021\375\001\002\000\004\162\376" +
    "\001\002\000\004\022\377\001\002\000\004\044\u0100\001" +
    "\002\000\006\022\u0102\161\u0101\001\002\000\004\160\u0103" +
    "\001\002\000\006\002\uff8e\007\uff8e\001\002\000\004\006" +
    "\u0104\001\002\000\004\021\u0105\001\002\000\004\162\u0106" +
    "\001\002\000\004\022\u0107\001\002\000\004\030\u0108\001" +
    "\002\000\004\044\u0109\001\002\000\006\022\u010b\161\u010a" +
    "\001\002\000\004\160\u010c\001\002\000\006\002\uff8d\007" +
    "\uff8d\001\002\000\004\006\u010d\001\002\000\004\021\u010e" +
    "\001\002\000\004\162\u010f\001\002\000\004\022\u0110\001" +
    "\002\000\004\044\u0111\001\002\000\006\022\u0113\161\u0112" +
    "\001\002\000\004\160\u0114\001\002\000\006\002\uff8c\007" +
    "\uff8c\001\002\000\004\006\u0115\001\002\000\004\021\u0116" +
    "\001\002\000\004\162\u0117\001\002\000\004\022\u0118\001" +
    "\002\000\004\030\u0119\001\002\000\004\044\u011a\001\002" +
    "\000\006\022\u011c\161\u011b\001\002\000\004\160\u011d\001" +
    "\002\000\006\002\uff8b\007\uff8b\001\002\000\004\006\u011e" +
    "\001\002\000\004\021\u011f\001\002\000\004\162\u0120\001" +
    "\002\000\004\022\u0121\001\002\000\004\044\u0122\001\002" +
    "\000\006\022\u0124\161\u0123\001\002\000\004\160\u0125\001" +
    "\002\000\006\002\uff8a\007\uff8a\001\002\000\004\006\u0126" +
    "\001\002\000\004\021\u0127\001\002\000\004\162\u0128\001" +
    "\002\000\004\022\u0129\001\002\000\004\030\u012a\001\002" +
    "\000\004\044\u012b\001\002\000\004\022\u012c\001\002\000" +
    "\006\002\uff89\007\uff89\001\002\000\004\161\u012e\001\002" +
    "\000\004\160\u012f\001\002\000\004\006\u0130\001\002\000" +
    "\004\021\u0131\001\002\000\004\162\u0132\001\002\000\004" +
    "\022\u0133\001\002\000\004\030\u0134\001\002\000\004\044" +
    "\u0135\001\002\000\006\022\u0137\161\u0136\001\002\000\004" +
    "\160\u0139\001\002\000\004\133\u0138\001\002\000\006\002" +
    "\uffac\007\uffac\001\002\000\004\006\u013a\001\002\000\004" +
    "\021\u013b\001\002\000\004\162\u013c\001\002\000\004\022" +
    "\u013d\001\002\000\004\030\u013e\001\002\000\004\044\u013f" +
    "\001\002\000\004\022\u0140\001\002\000\004\133\u0141\001" +
    "\002\000\006\002\uffad\007\uffad\001\002\000\004\021\u0143" +
    "\001\002\000\004\160\u0144\001\002\000\004\022\u0145\001" +
    "\002\000\004\146\u0146\001\002\000\004\160\u0147\001\002" +
    "\000\004\021\u0148\001\002\000\004\160\u0149\001\002\000" +
    "\004\022\u014a\001\002\000\004\022\u014b\001\002\000\010" +
    "\002\uffa9\007\uffa9\133\u014c\001\002\000\006\002\uffa8\007" +
    "\uffa8\001\002\000\004\006\u014e\001\002\000\004\021\u014f" +
    "\001\002\000\004\162\u0150\001\002\000\004\022\u0151\001" +
    "\002\000\006\123\u0153\161\u0152\001\002\000\004\160\u015f" +
    "\001\002\000\004\122\u0154\001\002\000\004\021\u0155\001" +
    "\002\000\004\160\u0156\001\002\000\004\022\u0157\001\002" +
    "\000\004\146\u0158\001\002\000\004\160\u0159\001\002\000" +
    "\004\021\u015a\001\002\000\004\160\u015b\001\002\000\004" +
    "\022\u015c\001\002\000\004\022\u015d\001\002\000\010\002" +
    "\uffa6\007\uffa6\133\u015e\001\002\000\006\002\uffa7\007\uffa7" +
    "\001\002\000\004\006\u0160\001\002\000\004\021\u0161\001" +
    "\002\000\004\162\u0162\001\002\000\004\022\u0163\001\002" +
    "\000\006\123\u0165\161\u0164\001\002\000\004\160\u0171\001" +
    "\002\000\004\122\u0166\001\002\000\004\021\u0167\001\002" +
    "\000\004\160\u0168\001\002\000\004\022\u0169\001\002\000" +
    "\004\146\u016a\001\002\000\004\160\u016b\001\002\000\004" +
    "\021\u016c\001\002\000\004\160\u016d\001\002\000\004\022" +
    "\u016e\001\002\000\004\022\u016f\001\002\000\010\002\uffa4" +
    "\007\uffa4\133\u0170\001\002\000\006\002\uffa5\007\uffa5\001" +
    "\002\000\004\006\u0172\001\002\000\004\021\u0173\001\002" +
    "\000\004\162\u0174\001\002\000\004\022\u0175\001\002\000" +
    "\006\123\u0177\161\u0176\001\002\000\004\160\u0183\001\002" +
    "\000\004\122\u0178\001\002\000\004\021\u0179\001\002\000" +
    "\004\160\u017a\001\002\000\004\022\u017b\001\002\000\004" +
    "\146\u017c\001\002\000\004\160\u017d\001\002\000\004\021" +
    "\u017e\001\002\000\004\160\u017f\001\002\000\004\022\u0180" +
    "\001\002\000\004\022\u0181\001\002\000\010\002\uffa2\007" +
    "\uffa2\133\u0182\001\002\000\006\002\uffa3\007\uffa3\001\002" +
    "\000\004\006\u0184\001\002\000\004\021\u0185\001\002\000" +
    "\004\162\u0186\001\002\000\004\022\u0187\001\002\000\006" +
    "\123\u0189\161\u0188\001\002\000\004\160\u0195\001\002\000" +
    "\004\122\u018a\001\002\000\004\021\u018b\001\002\000\004" +
    "\160\u018c\001\002\000\004\022\u018d\001\002\000\004\146" +
    "\u018e\001\002\000\004\160\u018f\001\002\000\004\021\u0190" +
    "\001\002\000\004\160\u0191\001\002\000\004\022\u0192\001" +
    "\002\000\004\022\u0193\001\002\000\010\002\uffa0\007\uffa0" +
    "\133\u0194\001\002\000\006\002\uffa1\007\uffa1\001\002\000" +
    "\004\006\u0196\001\002\000\004\021\u0197\001\002\000\004" +
    "\162\u0198\001\002\000\004\022\u0199\001\002\000\004\123" +
    "\u019a\001\002\000\004\122\u019b\001\002\000\004\021\u019c" +
    "\001\002\000\004\160\u019d\001\002\000\004\022\u019e\001" +
    "\002\000\004\146\u019f\001\002\000\004\160\u01a0\001\002" +
    "\000\004\021\u01a1\001\002\000\004\160\u01a2\001\002\000" +
    "\004\022\u01a3\001\002\000\004\022\u01a4\001\002\000\010" +
    "\002\uff9e\007\uff9e\133\u01a5\001\002\000\006\002\uff9f\007" +
    "\uff9f\001\002\000\004\006\u01a7\001\002\000\004\021\u01a8" +
    "\001\002\000\004\162\u01a9\001\002\000\004\022\u01aa\001" +
    "\002\000\004\030\u01ab\001\002\000\004\044\u01ac\001\002" +
    "\000\006\022\u01ae\161\u01ad\001\002\000\004\160\u01af\001" +
    "\002\000\006\002\uff9b\007\uff9b\001\002\000\004\006\u01b0" +
    "\001\002\000\004\021\u01b1\001\002\000\004\162\u01b2\001" +
    "\002\000\004\022\u01b3\001\002\000\004\030\u01b4\001\002" +
    "\000\004\044\u01b5\001\002\000\006\022\u01b7\161\u01b6\001" +
    "\002\000\004\160\u01b8\001\002\000\006\002\uff9a\007\uff9a" +
    "\001\002\000\004\006\u01b9\001\002\000\004\021\u01ba\001" +
    "\002\000\004\162\u01bb\001\002\000\004\022\u01bc\001\002" +
    "\000\004\030\u01bd\001\002\000\004\044\u01be\001\002\000" +
    "\006\022\u01c0\161\u01bf\001\002\000\004\160\u01c1\001\002" +
    "\000\006\002\uff99\007\uff99\001\002\000\004\006\u01c2\001" +
    "\002\000\004\021\u01c3\001\002\000\004\162\u01c4\001\002" +
    "\000\004\022\u01c5\001\002\000\004\030\u01c6\001\002\000" +
    "\004\044\u01c7\001\002\000\006\022\u01c9\161\u01c8\001\002" +
    "\000\004\160\u01ca\001\002\000\006\002\uff98\007\uff98\001" +
    "\002\000\004\006\u01cb\001\002\000\004\021\u01cc\001\002" +
    "\000\004\162\u01cd\001\002\000\004\022\u01ce\001\002\000" +
    "\004\030\u01cf\001\002\000\004\044\u01d0\001\002\000\006" +
    "\022\u01d2\161\u01d1\001\002\000\004\160\u01d3\001\002\000" +
    "\006\002\uff97\007\uff97\001\002\000\004\006\u01d4\001\002" +
    "\000\004\021\u01d5\001\002\000\004\162\u01d6\001\002\000" +
    "\004\022\u01d7\001\002\000\004\030\u01d8\001\002\000\004" +
    "\044\u01d9\001\002\000\006\022\u01db\161\u01da\001\002\000" +
    "\004\160\u01dc\001\002\000\006\002\uff96\007\uff96\001\002" +
    "\000\004\006\u01dd\001\002\000\004\021\u01de\001\002\000" +
    "\004\162\u01df\001\002\000\004\022\u01e0\001\002\000\004" +
    "\030\u01e1\001\002\000\004\044\u01e2\001\002\000\006\022" +
    "\u01e4\161\u01e3\001\002\000\004\160\u01e5\001\002\000\006" +
    "\002\uff95\007\uff95\001\002\000\004\006\u01e6\001\002\000" +
    "\004\021\u01e7\001\002\000\004\162\u01e8\001\002\000\004" +
    "\022\u01e9\001\002\000\004\030\u01ea\001\002\000\004\044" +
    "\u01eb\001\002\000\006\022\u01ed\161\u01ec\001\002\000\004" +
    "\160\u01ee\001\002\000\006\002\uff94\007\uff94\001\002\000" +
    "\004\006\u01ef\001\002\000\004\021\u01f0\001\002\000\004" +
    "\162\u01f1\001\002\000\004\022\u01f2\001\002\000\004\030" +
    "\u01f3\001\002\000\004\044\u01f4\001\002\000\004\022\u01f5" +
    "\001\002\000\006\002\uff93\007\uff93\001\002\000\004\006" +
    "\u01f7\001\002\000\004\021\u01f8\001\002\000\004\162\u01f9" +
    "\001\002\000\004\022\u01fa\001\002\000\006\022\u01fc\161" +
    "\u01fb\001\002\000\004\160\u01fd\001\002\000\006\002\uffc1" +
    "\007\uffc1\001\002\000\004\006\u01fe\001\002\000\004\021" +
    "\u01ff\001\002\000\004\162\u0200\001\002\000\004\022\u0201" +
    "\001\002\000\006\022\u0203\161\u0202\001\002\000\004\160" +
    "\u0204\001\002\000\006\002\uffc0\007\uffc0\001\002\000\004" +
    "\006\u0205\001\002\000\004\021\u0206\001\002\000\004\162" +
    "\u0207\001\002\000\004\022\u0208\001\002\000\006\022\u020a" +
    "\161\u0209\001\002\000\004\160\u020b\001\002\000\006\002" +
    "\uffbf\007\uffbf\001\002\000\004\006\u020c\001\002\000\004" +
    "\021\u020d\001\002\000\004\162\u020e\001\002\000\004\022" +
    "\u020f\001\002\000\006\022\u0211\161\u0210\001\002\000\004" +
    "\160\u0212\001\002\000\006\002\uffbe\007\uffbe\001\002\000" +
    "\004\006\u0213\001\002\000\004\021\u0214\001\002\000\004" +
    "\162\u0215\001\002\000\004\022\u0216\001\002\000\006\022" +
    "\u0218\161\u0217\001\002\000\004\160\u0219\001\002\000\006" +
    "\002\uffbd\007\uffbd\001\002\000\004\006\u021a\001\002\000" +
    "\004\021\u021b\001\002\000\004\162\u021c\001\002\000\004" +
    "\022\u021d\001\002\000\006\022\u021f\161\u021e\001\002\000" +
    "\004\160\u0220\001\002\000\006\002\uffbc\007\uffbc\001\002" +
    "\000\004\006\u0221\001\002\000\004\021\u0222\001\002\000" +
    "\004\162\u0223\001\002\000\004\022\u0224\001\002\000\006" +
    "\022\u0226\161\u0225\001\002\000\004\160\u0227\001\002\000" +
    "\006\002\uffbb\007\uffbb\001\002\000\004\006\u0228\001\002" +
    "\000\004\021\u0229\001\002\000\004\162\u022a\001\002\000" +
    "\004\022\u022b\001\002\000\006\022\u022d\161\u022c\001\002" +
    "\000\004\160\u022e\001\002\000\006\002\uffba\007\uffba\001" +
    "\002\000\004\006\u022f\001\002\000\004\021\u0230\001\002" +
    "\000\004\162\u0231\001\002\000\004\022\u0232\001\002\000" +
    "\006\022\u0234\161\u0233\001\002\000\004\160\u0235\001\002" +
    "\000\006\002\uffb9\007\uffb9\001\002\000\004\006\u0236\001" +
    "\002\000\004\021\u0237\001\002\000\004\162\u0238\001\002" +
    "\000\004\022\u0239\001\002\000\006\022\u023b\161\u023a\001" +
    "\002\000\004\160\u023c\001\002\000\006\002\uffb8\007\uffb8" +
    "\001\002\000\004\006\u023d\001\002\000\004\021\u023e\001" +
    "\002\000\004\162\u023f\001\002\000\004\022\u0240\001\002" +
    "\000\006\022\u0242\161\u0241\001\002\000\004\160\u0243\001" +
    "\002\000\006\002\uffb7\007\uffb7\001\002\000\004\006\u0244" +
    "\001\002\000\004\021\u0245\001\002\000\004\162\u0246\001" +
    "\002\000\004\022\u0247\001\002\000\006\022\u0249\161\u0248" +
    "\001\002\000\004\160\u024a\001\002\000\006\002\uffb6\007" +
    "\uffb6\001\002\000\004\006\u024b\001\002\000\004\021\u024c" +
    "\001\002\000\004\162\u024d\001\002\000\004\022\u024e\001" +
    "\002\000\006\022\u0250\161\u024f\001\002\000\004\160\u0251" +
    "\001\002\000\006\002\uffb5\007\uffb5\001\002\000\004\006" +
    "\u0252\001\002\000\004\021\u0253\001\002\000\004\162\u0254" +
    "\001\002\000\004\022\u0255\001\002\000\006\022\u0257\161" +
    "\u0256\001\002\000\004\160\u0258\001\002\000\006\002\uffb4" +
    "\007\uffb4\001\002\000\004\006\u0259\001\002\000\004\021" +
    "\u025a\001\002\000\004\162\u025b\001\002\000\004\022\u025c" +
    "\001\002\000\006\022\u025e\161\u025d\001\002\000\004\160" +
    "\u025f\001\002\000\006\002\uffb3\007\uffb3\001\002\000\004" +
    "\006\u0260\001\002\000\004\021\u0261\001\002\000\004\162" +
    "\u0262\001\002\000\004\022\u0263\001\002\000\006\022\u0265" +
    "\161\u0264\001\002\000\004\160\u0266\001\002\000\006\002" +
    "\uffb2\007\uffb2\001\002\000\004\006\u0267\001\002\000\004" +
    "\021\u0268\001\002\000\004\162\u0269\001\002\000\004\022" +
    "\u026a\001\002\000\006\022\u026c\161\u026b\001\002\000\004" +
    "\160\u026d\001\002\000\006\002\uffb1\007\uffb1\001\002\000" +
    "\004\006\u026e\001\002\000\004\021\u026f\001\002\000\004" +
    "\162\u0270\001\002\000\004\022\u0271\001\002\000\006\022" +
    "\u0273\161\u0272\001\002\000\004\160\u0274\001\002\000\006" +
    "\002\uffb0\007\uffb0\001\002\000\004\006\u0275\001\002\000" +
    "\004\021\u0276\001\002\000\004\162\u0277\001\002\000\004" +
    "\022\u0278\001\002\000\006\022\u027a\161\u0279\001\002\000" +
    "\004\160\u027b\001\002\000\006\002\uffaf\007\uffaf\001\002" +
    "\000\004\006\u027c\001\002\000\004\021\u027d\001\002\000" +
    "\004\162\u027e\001\002\000\004\022\u027f\001\002\000\004" +
    "\022\u0280\001\002\000\006\002\uffae\007\uffae\001\002\000" +
    "\004\002\001\001\002\000\004\160\u0283\001\002\000\006" +
    "\002\000\012\u0284\001\002\000\004\160\u0285\001\002\000" +
    "\006\002\uffd1\007\010\001\002\000\006\002\ufffe\007\010" +
    "\001\002\000\006\002\ufffd\007\010\001\002\000\006\002" +
    "\ufffc\007\010\001\002\000\006\002\ufffb\007\010\001\002" +
    "\000\006\002\ufffa\007\010\001\002\000\006\002\ufff9\007" +
    "\010\001\002\000\006\002\ufff8\007\010\001\002\000\006" +
    "\002\ufff7\007\010\001\002\000\006\002\ufff6\007\010\001" +
    "\002\000\006\002\ufff5\007\010\001\002\000\006\002\ufff4" +
    "\007\010\001\002\000\004\007\010\001\002\000\006\002" +
    "\ufff3\007\010\001\002\000\006\002\ufff2\007\010\001\002" +
    "\000\006\002\ufff1\007\010\001\002\000\006\002\ufff0\007" +
    "\010\001\002\000\006\002\uffef\007\010\001\002\000\006" +
    "\002\uffee\007\010\001\002\000\006\002\uffed\007\010\001" +
    "\002\000\006\002\uffec\007\010\001\002\000\006\002\uffeb" +
    "\007\010\001\002\000\006\002\uffea\007\010\001\002\000" +
    "\006\002\uffe9\007\010\001\002\000\006\002\uffe8\007\010" +
    "\001\002\000\006\002\uffe7\007\010\001\002\000\006\002" +
    "\uffe6\007\010\001\002\000\006\002\uffe5\007\010\001\002" +
    "\000\006\002\uffe4\007\010\001\002\000\006\002\uffe3\007" +
    "\010\001\002\000\006\002\uffe2\007\010\001\002\000\006" +
    "\002\uffe1\007\010\001\002\000\006\002\uffe0\007\010\001" +
    "\002\000\006\002\uffdf\007\010\001\002\000\006\002\uffde" +
    "\007\010\001\002\000\006\002\uffdd\007\010\001\002\000" +
    "\006\002\uffdc\007\010\001\002\000\006\002\uffdb\007\010" +
    "\001\002\000\006\002\uffda\007\010\001\002\000\006\002" +
    "\uffd9\007\010\001\002\000\006\002\uffd8\007\010\001\002" +
    "\000\006\002\uffd7\007\010\001\002\000\006\002\uffd6\007" +
    "\010\001\002\000\006\002\uffd5\007\010\001\002\000\006" +
    "\002\uffd4\007\010\001\002\000\006\002\uffd3\007\010\001" +
    "\002\000\004\002\uffd2\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02b1\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\004\013\005\010" +
    "\006\014\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\033\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\025\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\006" +
    "\034\001\001\000\004\006\035\001\001\000\004\006\036" +
    "\001\001\000\004\006\037\001\001\000\004\006\040\001" +
    "\001\000\004\006\041\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\u0285\001\001" +
    "\000\004\004\u0286\001\001\000\004\004\u0287\001\001\000" +
    "\004\004\u0288\001\001\000\004\004\u0289\001\001\000\004" +
    "\004\u028a\001\001\000\004\004\u028b\001\001\000\004\004" +
    "\u028c\001\001\000\004\004\u028d\001\001\000\004\004\u028e" +
    "\001\001\000\004\004\u028f\001\001\000\004\004\u0290\001" +
    "\001\000\004\004\u0291\001\001\000\004\004\u0292\001\001" +
    "\000\004\004\u0293\001\001\000\004\004\u0294\001\001\000" +
    "\004\004\u0295\001\001\000\004\004\u0296\001\001\000\004" +
    "\004\u0297\001\001\000\004\004\u0298\001\001\000\004\004" +
    "\u0299\001\001\000\004\004\u029a\001\001\000\004\004\u029b" +
    "\001\001\000\004\004\u029c\001\001\000\004\004\u029d\001" +
    "\001\000\004\004\u029e\001\001\000\004\004\u029f\001\001" +
    "\000\004\004\u02a0\001\001\000\004\004\u02a1\001\001\000" +
    "\004\004\u02a2\001\001\000\004\004\u02a3\001\001\000\004" +
    "\004\u02a4\001\001\000\004\004\u02a5\001\001\000\004\004" +
    "\u02a6\001\001\000\004\004\u02a7\001\001\000\004\004\u02a8" +
    "\001\001\000\004\004\u02a9\001\001\000\004\004\u02aa\001" +
    "\001\000\004\004\u02ab\001\001\000\004\004\u02ac\001\001" +
    "\000\004\004\u02ad\001\001\000\004\004\u02ae\001\001\000" +
    "\004\004\u02af\001\001\000\004\004\u02b0\001\001\000\004" +
    "\004\u02b1\001\001\000\004\004\u02b2\001\001\000\002\001" +
    "\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-69)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-47)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-87)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-73)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-59)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-31)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-68)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-86)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-72)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-58)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-30)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Identificador Identificador P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // QUERY_WHERE ::= WHERE Identificador Op_relacional COMILLA Identificador COMILLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_WHERE",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-86)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-78)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-71)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-63)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-56)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-48)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-41)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-26)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-88)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-80)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-72)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-64)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-56)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-48)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-40)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-32)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-24)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-57)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-58)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-51)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-52)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-40)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-34)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-28)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-27)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-22)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-28)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-36)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-129)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-123)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-117)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-111)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-105)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-99)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-93)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-87)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-81)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-75)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-69)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-63)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-57)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-51)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-27)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // QUERY_SELECT ::= SELECT All FROM Identificador QUERY_WHERE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // QUERY_SELECT ::= SELECT Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // QUERY_SELECT ::= SELECT All FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // QUERY_MAIN ::= USE Identificador QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // QUERY_MAIN ::= USE Identificador QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // QUERY_MAIN ::= USE Identificador QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // QUERY_MAIN ::= USE Identificador DROP DATABASE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-50)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-49)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-48)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-47)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-44)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-43)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-42)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-41)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-40)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-38)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-37)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-36)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-35)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-34)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-32)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-31)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-30)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-29)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-28)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-27)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-26)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-25)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-24)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-23)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-22)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-20)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-19)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-14)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // QUERY_MAIN ::= USE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // QUERY_MAIN ::= CREATE DATABASE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= QUERY_MAIN EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

