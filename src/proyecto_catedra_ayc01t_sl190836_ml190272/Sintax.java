
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Nov 17 02:54:27 CST 2021
//----------------------------------------------------

package proyecto_catedra_ayc01t_sl190836_ml190272;

import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Nov 17 02:54:27 CST 2021
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0116\000\002\002\004\000\002\002\005\000\002\002" +
    "\004\000\002\002\010\000\002\002\011\000\002\002\012" +
    "\000\002\002\013\000\002\002\014\000\002\002\015\000" +
    "\002\002\016\000\002\002\017\000\002\002\020\000\002" +
    "\002\021\000\002\002\022\000\002\002\024\000\002\002" +
    "\025\000\002\002\026\000\002\002\027\000\002\002\030" +
    "\000\002\002\031\000\002\002\032\000\002\002\033\000" +
    "\002\002\034\000\002\002\035\000\002\002\036\000\002" +
    "\002\037\000\002\002\040\000\002\002\041\000\002\002" +
    "\042\000\002\002\043\000\002\002\044\000\002\002\045" +
    "\000\002\002\046\000\002\002\047\000\002\002\050\000" +
    "\002\002\051\000\002\002\052\000\002\002\053\000\002" +
    "\002\054\000\002\002\055\000\002\002\056\000\002\002" +
    "\057\000\002\002\060\000\002\002\061\000\002\002\062" +
    "\000\002\002\063\000\002\002\064\000\002\002\065\000" +
    "\002\002\007\000\002\002\007\000\002\002\005\000\002" +
    "\002\006\000\002\002\007\000\002\002\010\000\002\002" +
    "\011\000\002\002\012\000\002\002\013\000\002\002\014" +
    "\000\002\002\015\000\002\002\016\000\002\002\017\000" +
    "\002\002\020\000\002\002\021\000\002\002\005\000\002" +
    "\002\006\000\002\002\007\000\002\002\010\000\002\002" +
    "\011\000\002\002\012\000\002\002\013\000\002\002\014" +
    "\000\002\002\015\000\002\002\016\000\002\002\017\000" +
    "\002\002\020\000\002\002\021\000\002\002\022\000\002" +
    "\002\023\000\002\002\024\000\002\002\025\000\002\002" +
    "\005\000\002\002\011\000\002\002\012\000\002\002\010" +
    "\000\002\002\012\000\002\002\010\000\002\002\011\000" +
    "\002\002\012\000\002\002\005\000\002\002\007\000\002" +
    "\002\011\000\002\002\013\000\002\002\015\000\002\002" +
    "\017\000\002\002\021\000\002\002\023\000\002\002\005" +
    "\000\002\002\006\000\002\002\007\000\002\002\010\000" +
    "\002\002\011\000\002\002\012\000\002\002\013\000\002" +
    "\002\014\000\002\002\015\000\002\002\016\000\002\002" +
    "\005\000\002\002\006\000\002\002\007\000\002\002\010" +
    "\000\002\002\011\000\002\002\012\000\002\002\013\000" +
    "\002\002\014\000\002\002\015\000\002\002\002\000\002" +
    "\005\006\000\002\005\006\000\002\005\012\000\002\005" +
    "\014\000\002\005\016\000\002\005\020\000\002\005\022" +
    "\000\002\005\024\000\002\005\020\000\002\005\026\000" +
    "\002\005\045\000\002\005\065\000\002\004\014\000\002" +
    "\004\022\000\002\004\030\000\002\004\036\000\002\004" +
    "\044\000\002\004\052\000\002\004\060\000\002\004\066" +
    "\000\002\004\074\000\002\004\102\000\002\004\110\000" +
    "\002\004\116\000\002\004\124\000\002\004\132\000\002" +
    "\004\140\000\002\004\146\000\002\004\154\000\002\004" +
    "\162\000\002\004\170\000\002\004\176\000\002\004\204" +
    "\000\002\004\047\000\002\004\037\000\002\004\031\000" +
    "\002\004\030\000\002\004\036\000\002\004\037\000\002" +
    "\004\045\000\002\004\044\000\002\004\053\000\002\004" +
    "\052\000\002\004\061\000\002\004\060\000\002\004\067" +
    "\000\002\004\066\000\002\004\075\000\002\004\074\000" +
    "\002\004\016\000\002\004\024\000\002\004\033\000\002" +
    "\004\043\000\002\004\053\000\002\004\063\000\002\004" +
    "\073\000\002\004\103\000\002\004\113\000\002\004\123" +
    "\000\002\004\133\000\002\004\025\000\002\004\035\000" +
    "\002\004\044\000\002\004\054\000\002\004\063\000\002" +
    "\004\073\000\002\004\102\000\002\004\112\000\002\004" +
    "\121\000\002\004\131\000\002\004\061\000\002\004\060" +
    "\000\002\004\047\000\002\004\050\000\002\004\047\000" +
    "\002\004\046\000\002\011\007\000\002\006\012\000\002" +
    "\006\041\000\002\006\060\000\002\006\075\000\002\006" +
    "\113\000\002\006\131\000\002\006\027\000\002\006\051" +
    "\000\002\006\073\000\002\006\115\000\002\006\137\000" +
    "\002\006\161\000\002\006\107\000\002\006\135\000\002" +
    "\006\163\000\002\006\211\000\002\006\131\000\002\006" +
    "\165\000\002\006\221\000\002\006\255\000\002\006\311" +
    "\000\002\006\015\000\002\006\025\000\002\006\045\000" +
    "\002\006\055\000\002\006\065\000\002\006\017\000\002" +
    "\006\031\000\002\006\043\000\002\006\055\000\002\006" +
    "\067\000\002\006\023\000\002\006\041\000\002\006\057" +
    "\000\002\006\075\000\002\006\113\000\002\006\013\000" +
    "\002\006\042\000\002\006\061\000\002\006\076\000\002" +
    "\006\114\000\002\006\132\000\002\006\030\000\002\006" +
    "\052\000\002\006\074\000\002\006\116\000\002\006\140" +
    "\000\002\006\162\000\002\006\110\000\002\006\136\000" +
    "\002\006\164\000\002\006\212\000\002\006\132\000\002" +
    "\006\166\000\002\006\222\000\002\006\256\000\002\006" +
    "\312\000\002\006\016\000\002\006\026\000\002\006\046" +
    "\000\002\006\056\000\002\006\066\000\002\006\020\000" +
    "\002\006\032\000\002\006\044\000\002\006\056\000\002" +
    "\006\070\000\002\006\024\000\002\006\042\000\002\006" +
    "\060\000\002\006\076\000\002\006\114\000\002\006\026" +
    "\000\002\006\146\000\002\006\145\000\002\006\114\000" +
    "\002\006\113\000\002\007\005\000\002\007\013\000\002" +
    "\007\011\000\002\010\021\000\002\010\027\000\002\010" +
    "\035\000\002\010\043\000\002\010\051" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0692\000\012\002\uff8e\007\004\011\005\012\007\001" +
    "\002\000\004\010\u065a\001\002\000\006\010\u043c\013\u043d" +
    "\001\002\000\004\002\u043b\001\002\000\004\160\010\001" +
    "\002\000\016\002\uffff\011\011\014\020\033\021\034\017" +
    "\035\013\001\002\000\004\010\u0439\001\002\000\006\002" +
    "\uff97\035\013\001\002\000\004\160\u03ef\001\002\000\006" +
    "\002\uffc2\033\021\001\002\000\006\002\uffa1\034\017\001" +
    "\002\000\006\002\uffcf\014\020\001\002\000\004\016\u03c9" +
    "\001\002\000\006\015\u033c\160\u033d\001\002\000\004\036" +
    "\022\001\002\000\004\160\023\001\002\000\004\040\024" +
    "\001\002\000\004\021\025\001\002\000\010\020\027\160" +
    "\030\162\026\001\002\000\004\161\u0298\001\002\000\004" +
    "\160\034\001\002\000\004\160\031\001\002\000\004\022" +
    "\032\001\002\000\012\002\uff40\014\uff40\033\uff40\133\033" +
    "\001\002\000\010\002\uff1c\014\uff1c\033\uff1c\001\002\000" +
    "\004\020\035\001\002\000\004\161\036\001\002\000\004" +
    "\020\037\001\002\000\004\160\040\001\002\000\004\020" +
    "\041\001\002\000\006\022\043\161\042\001\002\000\006" +
    "\020\142\162\141\001\002\000\004\161\044\001\002\000" +
    "\004\021\045\001\002\000\004\020\046\001\002\000\004" +
    "\160\047\001\002\000\004\020\050\001\002\000\004\161" +
    "\051\001\002\000\004\020\052\001\002\000\004\160\053" +
    "\001\002\000\004\020\054\001\002\000\004\022\055\001" +
    "\002\000\004\161\056\001\002\000\004\021\057\001\002" +
    "\000\004\020\060\001\002\000\004\160\061\001\002\000" +
    "\004\020\062\001\002\000\004\161\063\001\002\000\004" +
    "\020\064\001\002\000\004\160\065\001\002\000\004\020" +
    "\066\001\002\000\004\022\067\001\002\000\004\161\070" +
    "\001\002\000\004\021\071\001\002\000\004\020\072\001" +
    "\002\000\004\160\073\001\002\000\004\020\074\001\002" +
    "\000\004\161\075\001\002\000\004\020\076\001\002\000" +
    "\004\160\077\001\002\000\004\020\100\001\002\000\004" +
    "\022\101\001\002\000\004\161\102\001\002\000\004\021" +
    "\103\001\002\000\004\020\104\001\002\000\004\160\105" +
    "\001\002\000\004\020\106\001\002\000\004\161\107\001" +
    "\002\000\004\020\110\001\002\000\004\160\111\001\002" +
    "\000\004\020\112\001\002\000\004\022\113\001\002\000" +
    "\004\161\114\001\002\000\004\021\115\001\002\000\004" +
    "\020\116\001\002\000\004\160\117\001\002\000\004\020" +
    "\120\001\002\000\004\161\121\001\002\000\004\020\122" +
    "\001\002\000\004\160\123\001\002\000\004\020\124\001" +
    "\002\000\004\022\125\001\002\000\004\161\126\001\002" +
    "\000\004\021\127\001\002\000\004\020\130\001\002\000" +
    "\004\160\131\001\002\000\004\020\132\001\002\000\004" +
    "\161\133\001\002\000\004\020\134\001\002\000\004\160" +
    "\135\001\002\000\004\020\136\001\002\000\004\022\137" +
    "\001\002\000\012\002\ufef4\014\ufef4\033\ufef4\133\140\001" +
    "\002\000\010\002\ufef5\014\ufef5\033\ufef5\001\002\000\004" +
    "\161\u0241\001\002\000\004\160\143\001\002\000\004\020" +
    "\144\001\002\000\006\022\146\161\145\001\002\000\004" +
    "\020\262\001\002\000\004\161\147\001\002\000\004\021" +
    "\150\001\002\000\004\020\151\001\002\000\004\160\152" +
    "\001\002\000\004\020\153\001\002\000\004\161\154\001" +
    "\002\000\004\020\155\001\002\000\004\160\156\001\002" +
    "\000\004\020\157\001\002\000\004\161\160\001\002\000" +
    "\004\020\161\001\002\000\004\160\162\001\002\000\004" +
    "\020\163\001\002\000\004\022\164\001\002\000\014\002" +
    "\uff3f\014\uff3f\033\uff3f\133\166\161\165\001\002\000\004" +
    "\021\167\001\002\000\010\002\uff1b\014\uff1b\033\uff1b\001" +
    "\002\000\004\020\170\001\002\000\004\160\171\001\002" +
    "\000\004\020\172\001\002\000\004\161\173\001\002\000" +
    "\004\020\174\001\002\000\004\160\175\001\002\000\004" +
    "\020\176\001\002\000\004\161\177\001\002\000\004\020" +
    "\200\001\002\000\004\160\201\001\002\000\004\020\202" +
    "\001\002\000\004\022\203\001\002\000\004\161\204\001" +
    "\002\000\014\002\uff3e\014\uff3e\021\205\033\uff3e\133\206" +
    "\001\002\000\004\020\207\001\002\000\010\002\uff1a\014" +
    "\uff1a\033\uff1a\001\002\000\004\160\210\001\002\000\004" +
    "\020\211\001\002\000\004\161\212\001\002\000\004\020" +
    "\213\001\002\000\004\160\214\001\002\000\004\020\215" +
    "\001\002\000\004\161\216\001\002\000\004\020\217\001" +
    "\002\000\004\160\220\001\002\000\004\020\221\001\002" +
    "\000\004\022\222\001\002\000\014\002\uff3d\014\uff3d\033" +
    "\uff3d\133\224\161\223\001\002\000\004\021\225\001\002" +
    "\000\010\002\uff19\014\uff19\033\uff19\001\002\000\004\020" +
    "\226\001\002\000\004\160\227\001\002\000\004\020\230" +
    "\001\002\000\004\161\231\001\002\000\004\020\232\001" +
    "\002\000\004\160\233\001\002\000\004\020\234\001\002" +
    "\000\004\161\235\001\002\000\004\020\236\001\002\000" +
    "\004\160\237\001\002\000\004\020\240\001\002\000\004" +
    "\022\241\001\002\000\014\002\uff3c\014\uff3c\033\uff3c\133" +
    "\243\161\242\001\002\000\004\021\244\001\002\000\010" +
    "\002\uff18\014\uff18\033\uff18\001\002\000\004\020\245\001" +
    "\002\000\004\160\246\001\002\000\004\020\247\001\002" +
    "\000\004\161\250\001\002\000\004\020\251\001\002\000" +
    "\004\160\252\001\002\000\004\020\253\001\002\000\004" +
    "\161\254\001\002\000\004\020\255\001\002\000\004\160" +
    "\256\001\002\000\004\020\257\001\002\000\004\022\260" +
    "\001\002\000\012\002\uff3b\014\uff3b\033\uff3b\133\261\001" +
    "\002\000\010\002\uff17\014\uff17\033\uff17\001\002\000\004" +
    "\160\263\001\002\000\004\020\264\001\002\000\006\022" +
    "\266\161\265\001\002\000\004\020\u0117\001\002\000\014" +
    "\002\uff3a\014\uff3a\033\uff3a\133\270\161\267\001\002\000" +
    "\004\021\271\001\002\000\010\002\uff16\014\uff16\033\uff16" +
    "\001\002\000\004\020\272\001\002\000\004\160\273\001" +
    "\002\000\004\020\274\001\002\000\004\161\275\001\002" +
    "\000\004\020\276\001\002\000\004\160\277\001\002\000" +
    "\004\020\300\001\002\000\004\161\301\001\002\000\004" +
    "\020\302\001\002\000\004\160\303\001\002\000\004\020" +
    "\304\001\002\000\004\161\305\001\002\000\004\020\306" +
    "\001\002\000\004\160\307\001\002\000\004\020\310\001" +
    "\002\000\004\022\311\001\002\000\014\002\uff39\014\uff39" +
    "\033\uff39\133\313\161\312\001\002\000\004\021\314\001" +
    "\002\000\010\002\uff15\014\uff15\033\uff15\001\002\000\004" +
    "\020\315\001\002\000\004\160\316\001\002\000\004\020" +
    "\317\001\002\000\004\161\320\001\002\000\004\020\321" +
    "\001\002\000\004\160\322\001\002\000\004\020\323\001" +
    "\002\000\004\161\324\001\002\000\004\020\325\001\002" +
    "\000\004\160\326\001\002\000\004\020\327\001\002\000" +
    "\004\161\330\001\002\000\004\020\331\001\002\000\004" +
    "\160\332\001\002\000\004\020\333\001\002\000\004\022" +
    "\334\001\002\000\014\002\uff38\014\uff38\033\uff38\133\336" +
    "\161\335\001\002\000\004\021\337\001\002\000\010\002" +
    "\uff14\014\uff14\033\uff14\001\002\000\004\020\340\001\002" +
    "\000\004\160\341\001\002\000\004\020\342\001\002\000" +
    "\004\161\343\001\002\000\004\020\344\001\002\000\004" +
    "\160\345\001\002\000\004\020\346\001\002\000\004\161" +
    "\347\001\002\000\004\020\350\001\002\000\004\160\351" +
    "\001\002\000\004\020\352\001\002\000\004\161\353\001" +
    "\002\000\004\020\354\001\002\000\004\160\355\001\002" +
    "\000\004\020\356\001\002\000\004\022\357\001\002\000" +
    "\014\002\uff37\014\uff37\033\uff37\133\361\161\360\001\002" +
    "\000\004\021\362\001\002\000\010\002\uff13\014\uff13\033" +
    "\uff13\001\002\000\004\020\363\001\002\000\004\160\364" +
    "\001\002\000\004\020\365\001\002\000\004\161\366\001" +
    "\002\000\004\020\367\001\002\000\004\160\370\001\002" +
    "\000\004\020\371\001\002\000\004\161\372\001\002\000" +
    "\004\020\373\001\002\000\004\160\374\001\002\000\004" +
    "\020\375\001\002\000\004\161\376\001\002\000\004\020" +
    "\377\001\002\000\004\160\u0100\001\002\000\004\020\u0101" +
    "\001\002\000\004\022\u0102\001\002\000\014\002\uff36\014" +
    "\uff36\033\uff36\133\u0104\161\u0103\001\002\000\004\021\u0105" +
    "\001\002\000\010\002\uff12\014\uff12\033\uff12\001\002\000" +
    "\004\020\u0106\001\002\000\004\160\u0107\001\002\000\004" +
    "\020\u0108\001\002\000\004\161\u0109\001\002\000\004\020" +
    "\u010a\001\002\000\004\160\u010b\001\002\000\004\020\u010c" +
    "\001\002\000\004\161\u010d\001\002\000\004\020\u010e\001" +
    "\002\000\004\160\u010f\001\002\000\004\020\u0110\001\002" +
    "\000\004\161\u0111\001\002\000\004\020\u0112\001\002\000" +
    "\004\160\u0113\001\002\000\004\020\u0114\001\002\000\004" +
    "\022\u0115\001\002\000\012\002\uff35\014\uff35\033\uff35\133" +
    "\u0116\001\002\000\010\002\uff11\014\uff11\033\uff11\001\002" +
    "\000\004\160\u0118\001\002\000\004\020\u0119\001\002\000" +
    "\006\022\u011b\161\u011a\001\002\000\004\162\u018e\001\002" +
    "\000\004\161\u011c\001\002\000\004\021\u011d\001\002\000" +
    "\004\020\u011e\001\002\000\004\160\u011f\001\002\000\004" +
    "\020\u0120\001\002\000\004\161\u0121\001\002\000\004\020" +
    "\u0122\001\002\000\004\160\u0123\001\002\000\004\020\u0124" +
    "\001\002\000\004\161\u0125\001\002\000\004\020\u0126\001" +
    "\002\000\004\160\u0127\001\002\000\004\020\u0128\001\002" +
    "\000\004\161\u0129\001\002\000\004\020\u012a\001\002\000" +
    "\004\160\u012b\001\002\000\004\020\u012c\001\002\000\004" +
    "\161\u012d\001\002\000\004\020\u012e\001\002\000\004\160" +
    "\u012f\001\002\000\004\020\u0130\001\002\000\004\022\u0131" +
    "\001\002\000\004\161\u0132\001\002\000\004\021\u0133\001" +
    "\002\000\004\020\u0134\001\002\000\004\160\u0135\001\002" +
    "\000\004\020\u0136\001\002\000\004\161\u0137\001\002\000" +
    "\004\020\u0138\001\002\000\004\160\u0139\001\002\000\004" +
    "\020\u013a\001\002\000\004\161\u013b\001\002\000\004\020" +
    "\u013c\001\002\000\004\160\u013d\001\002\000\004\020\u013e" +
    "\001\002\000\004\161\u013f\001\002\000\004\020\u0140\001" +
    "\002\000\004\160\u0141\001\002\000\004\020\u0142\001\002" +
    "\000\004\161\u0143\001\002\000\004\020\u0144\001\002\000" +
    "\004\160\u0145\001\002\000\004\020\u0146\001\002\000\004" +
    "\022\u0147\001\002\000\014\002\uff34\014\uff34\033\uff34\133" +
    "\u0149\161\u0148\001\002\000\004\021\u014a\001\002\000\010" +
    "\002\uff10\014\uff10\033\uff10\001\002\000\004\020\u014b\001" +
    "\002\000\004\160\u014c\001\002\000\004\020\u014d\001\002" +
    "\000\004\161\u014e\001\002\000\004\020\u014f\001\002\000" +
    "\004\160\u0150\001\002\000\004\020\u0151\001\002\000\004" +
    "\161\u0152\001\002\000\004\020\u0153\001\002\000\004\160" +
    "\u0154\001\002\000\004\020\u0155\001\002\000\004\161\u0156" +
    "\001\002\000\004\020\u0157\001\002\000\004\160\u0158\001" +
    "\002\000\004\020\u0159\001\002\000\004\161\u015a\001\002" +
    "\000\004\020\u015b\001\002\000\004\160\u015c\001\002\000" +
    "\004\020\u015d\001\002\000\004\022\u015e\001\002\000\014" +
    "\002\uff33\014\uff33\033\uff33\133\u0160\161\u015f\001\002\000" +
    "\004\021\u0161\001\002\000\010\002\uff0f\014\uff0f\033\uff0f" +
    "\001\002\000\004\020\u0162\001\002\000\004\160\u0163\001" +
    "\002\000\004\020\u0164\001\002\000\004\161\u0165\001\002" +
    "\000\004\020\u0166\001\002\000\004\160\u0167\001\002\000" +
    "\004\020\u0168\001\002\000\004\161\u0169\001\002\000\004" +
    "\020\u016a\001\002\000\004\160\u016b\001\002\000\004\020" +
    "\u016c\001\002\000\004\161\u016d\001\002\000\004\020\u016e" +
    "\001\002\000\004\160\u016f\001\002\000\004\020\u0170\001" +
    "\002\000\004\161\u0171\001\002\000\004\020\u0172\001\002" +
    "\000\004\160\u0173\001\002\000\004\020\u0174\001\002\000" +
    "\004\022\u0175\001\002\000\014\002\uff32\014\uff32\033\uff32" +
    "\133\u0177\161\u0176\001\002\000\004\021\u0178\001\002\000" +
    "\010\002\uff0e\014\uff0e\033\uff0e\001\002\000\004\020\u0179" +
    "\001\002\000\004\160\u017a\001\002\000\004\020\u017b\001" +
    "\002\000\004\161\u017c\001\002\000\004\020\u017d\001\002" +
    "\000\004\160\u017e\001\002\000\004\020\u017f\001\002\000" +
    "\004\161\u0180\001\002\000\004\020\u0181\001\002\000\004" +
    "\160\u0182\001\002\000\004\020\u0183\001\002\000\004\161" +
    "\u0184\001\002\000\004\020\u0185\001\002\000\004\160\u0186" +
    "\001\002\000\004\020\u0187\001\002\000\004\161\u0188\001" +
    "\002\000\004\020\u0189\001\002\000\004\160\u018a\001\002" +
    "\000\004\020\u018b\001\002\000\004\022\u018c\001\002\000" +
    "\012\002\uff31\014\uff31\033\uff31\133\u018d\001\002\000\010" +
    "\002\uff0d\014\uff0d\033\uff0d\001\002\000\004\161\u018f\001" +
    "\002\000\004\020\u0190\001\002\000\004\160\u0191\001\002" +
    "\000\004\020\u0192\001\002\000\004\022\u0193\001\002\000" +
    "\004\161\u0194\001\002\000\004\021\u0195\001\002\000\004" +
    "\020\u0196\001\002\000\004\160\u0197\001\002\000\004\020" +
    "\u0198\001\002\000\004\161\u0199\001\002\000\004\020\u019a" +
    "\001\002\000\004\160\u019b\001\002\000\004\020\u019c\001" +
    "\002\000\004\161\u019d\001\002\000\004\020\u019e\001\002" +
    "\000\004\160\u019f\001\002\000\004\020\u01a0\001\002\000" +
    "\004\161\u01a1\001\002\000\004\020\u01a2\001\002\000\004" +
    "\160\u01a3\001\002\000\004\020\u01a4\001\002\000\004\161" +
    "\u01a5\001\002\000\004\020\u01a6\001\002\000\004\160\u01a7" +
    "\001\002\000\004\020\u01a8\001\002\000\004\161\u01a9\001" +
    "\002\000\004\162\u01aa\001\002\000\004\161\u01ab\001\002" +
    "\000\004\020\u01ac\001\002\000\004\160\u01ad\001\002\000" +
    "\004\020\u01ae\001\002\000\004\022\u01af\001\002\000\004" +
    "\161\u01b0\001\002\000\004\021\u01b1\001\002\000\004\020" +
    "\u01b2\001\002\000\004\160\u01b3\001\002\000\004\020\u01b4" +
    "\001\002\000\004\161\u01b5\001\002\000\004\020\u01b6\001" +
    "\002\000\004\160\u01b7\001\002\000\004\020\u01b8\001\002" +
    "\000\004\161\u01b9\001\002\000\004\020\u01ba\001\002\000" +
    "\004\160\u01bb\001\002\000\004\020\u01bc\001\002\000\004" +
    "\161\u01bd\001\002\000\004\020\u01be\001\002\000\004\160" +
    "\u01bf\001\002\000\004\020\u01c0\001\002\000\004\161\u01c1" +
    "\001\002\000\004\020\u01c2\001\002\000\004\160\u01c3\001" +
    "\002\000\004\020\u01c4\001\002\000\004\161\u01c5\001\002" +
    "\000\004\162\u01c6\001\002\000\004\161\u01c7\001\002\000" +
    "\004\020\u01c8\001\002\000\004\160\u01c9\001\002\000\004" +
    "\020\u01ca\001\002\000\004\022\u01cb\001\002\000\014\002" +
    "\uff30\014\uff30\033\uff30\133\u01cd\161\u01cc\001\002\000\004" +
    "\021\u01ce\001\002\000\010\002\uff0c\014\uff0c\033\uff0c\001" +
    "\002\000\004\020\u01cf\001\002\000\004\160\u01d0\001\002" +
    "\000\004\020\u01d1\001\002\000\004\161\u01d2\001\002\000" +
    "\004\020\u01d3\001\002\000\004\160\u01d4\001\002\000\004" +
    "\020\u01d5\001\002\000\004\161\u01d6\001\002\000\004\020" +
    "\u01d7\001\002\000\004\160\u01d8\001\002\000\004\020\u01d9" +
    "\001\002\000\004\161\u01da\001\002\000\004\020\u01db\001" +
    "\002\000\004\160\u01dc\001\002\000\004\020\u01dd\001\002" +
    "\000\004\161\u01de\001\002\000\004\020\u01df\001\002\000" +
    "\004\160\u01e0\001\002\000\004\020\u01e1\001\002\000\004" +
    "\161\u01e2\001\002\000\004\162\u01e3\001\002\000\004\161" +
    "\u01e4\001\002\000\004\020\u01e5\001\002\000\004\160\u01e6" +
    "\001\002\000\004\020\u01e7\001\002\000\004\022\u01e8\001" +
    "\002\000\014\002\uff2f\014\uff2f\033\uff2f\133\u01ea\161\u01e9" +
    "\001\002\000\004\021\u01eb\001\002\000\010\002\uff0b\014" +
    "\uff0b\033\uff0b\001\002\000\004\020\u01ec\001\002\000\004" +
    "\160\u01ed\001\002\000\004\020\u01ee\001\002\000\004\161" +
    "\u01ef\001\002\000\004\020\u01f0\001\002\000\004\160\u01f1" +
    "\001\002\000\004\020\u01f2\001\002\000\004\161\u01f3\001" +
    "\002\000\004\020\u01f4\001\002\000\004\160\u01f5\001\002" +
    "\000\004\020\u01f6\001\002\000\004\161\u01f7\001\002\000" +
    "\004\020\u01f8\001\002\000\004\160\u01f9\001\002\000\004" +
    "\020\u01fa\001\002\000\004\161\u01fb\001\002\000\004\020" +
    "\u01fc\001\002\000\004\160\u01fd\001\002\000\004\020\u01fe" +
    "\001\002\000\004\161\u01ff\001\002\000\004\162\u0200\001" +
    "\002\000\004\161\u0201\001\002\000\004\020\u0202\001\002" +
    "\000\004\160\u0203\001\002\000\004\020\u0204\001\002\000" +
    "\004\022\u0205\001\002\000\014\002\uff2e\014\uff2e\033\uff2e" +
    "\133\u0207\161\u0206\001\002\000\004\021\u0208\001\002\000" +
    "\010\002\uff0a\014\uff0a\033\uff0a\001\002\000\004\020\u0209" +
    "\001\002\000\004\160\u020a\001\002\000\004\020\u020b\001" +
    "\002\000\004\161\u020c\001\002\000\004\020\u020d\001\002" +
    "\000\004\160\u020e\001\002\000\004\020\u020f\001\002\000" +
    "\004\161\u0210\001\002\000\004\020\u0211\001\002\000\004" +
    "\160\u0212\001\002\000\004\020\u0213\001\002\000\004\161" +
    "\u0214\001\002\000\004\020\u0215\001\002\000\004\160\u0216" +
    "\001\002\000\004\020\u0217\001\002\000\004\161\u0218\001" +
    "\002\000\004\020\u0219\001\002\000\004\160\u021a\001\002" +
    "\000\004\020\u021b\001\002\000\004\161\u021c\001\002\000" +
    "\004\162\u021d\001\002\000\004\161\u021e\001\002\000\004" +
    "\020\u021f\001\002\000\004\160\u0220\001\002\000\004\020" +
    "\u0221\001\002\000\004\022\u0222\001\002\000\014\002\uff2d" +
    "\014\uff2d\033\uff2d\133\u0224\161\u0223\001\002\000\004\021" +
    "\u0225\001\002\000\010\002\uff09\014\uff09\033\uff09\001\002" +
    "\000\004\020\u0226\001\002\000\004\160\u0227\001\002\000" +
    "\004\020\u0228\001\002\000\004\161\u0229\001\002\000\004" +
    "\020\u022a\001\002\000\004\160\u022b\001\002\000\004\020" +
    "\u022c\001\002\000\004\161\u022d\001\002\000\004\020\u022e" +
    "\001\002\000\004\160\u022f\001\002\000\004\020\u0230\001" +
    "\002\000\004\161\u0231\001\002\000\004\020\u0232\001\002" +
    "\000\004\160\u0233\001\002\000\004\020\u0234\001\002\000" +
    "\004\161\u0235\001\002\000\004\020\u0236\001\002\000\004" +
    "\160\u0237\001\002\000\004\020\u0238\001\002\000\004\161" +
    "\u0239\001\002\000\004\162\u023a\001\002\000\004\161\u023b" +
    "\001\002\000\004\020\u023c\001\002\000\004\160\u023d\001" +
    "\002\000\004\020\u023e\001\002\000\004\022\u023f\001\002" +
    "\000\012\002\uff2c\014\uff2c\033\uff2c\133\u0240\001\002\000" +
    "\010\002\uff08\014\uff08\033\uff08\001\002\000\004\020\u0242" +
    "\001\002\000\004\160\u0243\001\002\000\004\020\u0244\001" +
    "\002\000\004\022\u0245\001\002\000\006\133\u0247\161\u0246" +
    "\001\002\000\004\021\u0248\001\002\000\010\002\ufef8\014" +
    "\ufef8\033\ufef8\001\002\000\004\020\u0249\001\002\000\004" +
    "\160\u024a\001\002\000\004\020\u024b\001\002\000\004\161" +
    "\u024c\001\002\000\004\020\u024d\001\002\000\004\160\u024e" +
    "\001\002\000\004\020\u024f\001\002\000\004\161\u0250\001" +
    "\002\000\004\162\u0251\001\002\000\004\161\u0252\001\002" +
    "\000\004\020\u0253\001\002\000\004\160\u0254\001\002\000" +
    "\004\020\u0255\001\002\000\004\022\u0256\001\002\000\004" +
    "\161\u0257\001\002\000\004\021\u0258\001\002\000\004\020" +
    "\u0259\001\002\000\004\160\u025a\001\002\000\004\020\u025b" +
    "\001\002\000\004\161\u025c\001\002\000\004\020\u025d\001" +
    "\002\000\004\160\u025e\001\002\000\004\020\u025f\001\002" +
    "\000\004\161\u0260\001\002\000\004\162\u0261\001\002\000" +
    "\004\161\u0262\001\002\000\004\020\u0263\001\002\000\004" +
    "\160\u0264\001\002\000\004\020\u0265\001\002\000\004\022" +
    "\u0266\001\002\000\004\161\u0267\001\002\000\004\021\u0268" +
    "\001\002\000\004\020\u0269\001\002\000\004\160\u026a\001" +
    "\002\000\004\020\u026b\001\002\000\004\161\u026c\001\002" +
    "\000\004\020\u026d\001\002\000\004\160\u026e\001\002\000" +
    "\004\020\u026f\001\002\000\004\161\u0270\001\002\000\004" +
    "\162\u0271\001\002\000\004\161\u0272\001\002\000\004\020" +
    "\u0273\001\002\000\004\160\u0274\001\002\000\004\020\u0275" +
    "\001\002\000\004\022\u0276\001\002\000\004\161\u0277\001" +
    "\002\000\004\021\u0278\001\002\000\004\020\u0279\001\002" +
    "\000\004\160\u027a\001\002\000\004\020\u027b\001\002\000" +
    "\004\161\u027c\001\002\000\004\020\u027d\001\002\000\004" +
    "\160\u027e\001\002\000\004\020\u027f\001\002\000\004\161" +
    "\u0280\001\002\000\004\162\u0281\001\002\000\004\161\u0282" +
    "\001\002\000\004\020\u0283\001\002\000\004\160\u0284\001" +
    "\002\000\004\020\u0285\001\002\000\004\022\u0286\001\002" +
    "\000\004\161\u0287\001\002\000\004\021\u0288\001\002\000" +
    "\004\020\u0289\001\002\000\004\160\u028a\001\002\000\004" +
    "\020\u028b\001\002\000\004\161\u028c\001\002\000\004\020" +
    "\u028d\001\002\000\004\160\u028e\001\002\000\004\020\u028f" +
    "\001\002\000\004\161\u0290\001\002\000\004\162\u0291\001" +
    "\002\000\004\161\u0292\001\002\000\004\020\u0293\001\002" +
    "\000\004\160\u0294\001\002\000\004\020\u0295\001\002\000" +
    "\004\022\u0296\001\002\000\012\002\ufef6\014\ufef6\033\ufef6" +
    "\133\u0297\001\002\000\010\002\ufef7\014\ufef7\033\ufef7\001" +
    "\002\000\004\020\u0299\001\002\000\004\160\u029a\001\002" +
    "\000\004\020\u029b\001\002\000\006\022\u029d\161\u029c\001" +
    "\002\000\004\162\u02cb\001\002\000\014\002\uff2b\014\uff2b" +
    "\033\uff2b\133\u029f\161\u029e\001\002\000\004\021\u02a0\001" +
    "\002\000\010\002\uff07\014\uff07\033\uff07\001\002\000\004" +
    "\162\u02a1\001\002\000\004\161\u02a2\001\002\000\004\020" +
    "\u02a3\001\002\000\004\160\u02a4\001\002\000\004\020\u02a5" +
    "\001\002\000\004\022\u02a6\001\002\000\014\002\uff2a\014" +
    "\uff2a\033\uff2a\133\u02a8\161\u02a7\001\002\000\004\021\u02a9" +
    "\001\002\000\010\002\uff06\014\uff06\033\uff06\001\002\000" +
    "\004\162\u02aa\001\002\000\004\161\u02ab\001\002\000\004" +
    "\020\u02ac\001\002\000\004\160\u02ad\001\002\000\004\020" +
    "\u02ae\001\002\000\004\022\u02af\001\002\000\004\161\u02b0" +
    "\001\002\000\004\021\u02b1\001\002\000\004\162\u02b2\001" +
    "\002\000\004\161\u02b3\001\002\000\004\020\u02b4\001\002" +
    "\000\004\160\u02b5\001\002\000\004\020\u02b6\001\002\000" +
    "\004\022\u02b7\001\002\000\014\002\uff29\014\uff29\033\uff29" +
    "\133\u02b9\161\u02b8\001\002\000\004\021\u02ba\001\002\000" +
    "\010\002\uff05\014\uff05\033\uff05\001\002\000\004\162\u02bb" +
    "\001\002\000\004\161\u02bc\001\002\000\004\020\u02bd\001" +
    "\002\000\004\160\u02be\001\002\000\004\020\u02bf\001\002" +
    "\000\004\022\u02c0\001\002\000\014\002\uff28\014\uff28\033" +
    "\uff28\133\u02c2\161\u02c1\001\002\000\004\021\u02c3\001\002" +
    "\000\010\002\uff04\014\uff04\033\uff04\001\002\000\004\162" +
    "\u02c4\001\002\000\004\161\u02c5\001\002\000\004\020\u02c6" +
    "\001\002\000\004\160\u02c7\001\002\000\004\020\u02c8\001" +
    "\002\000\004\022\u02c9\001\002\000\012\002\uff27\014\uff27" +
    "\033\uff27\133\u02ca\001\002\000\010\002\uff03\014\uff03\033" +
    "\uff03\001\002\000\006\022\u02cd\161\u02cc\001\002\000\004" +
    "\020\u02fb\001\002\000\014\002\uff26\014\uff26\033\uff26\133" +
    "\u02cf\161\u02ce\001\002\000\004\021\u02d0\001\002\000\010" +
    "\002\uff02\014\uff02\033\uff02\001\002\000\004\162\u02d1\001" +
    "\002\000\004\161\u02d2\001\002\000\004\020\u02d3\001\002" +
    "\000\004\160\u02d4\001\002\000\004\020\u02d5\001\002\000" +
    "\004\161\u02d6\001\002\000\004\162\u02d7\001\002\000\004" +
    "\022\u02d8\001\002\000\014\002\uff25\014\uff25\033\uff25\133" +
    "\u02da\161\u02d9\001\002\000\004\021\u02db\001\002\000\010" +
    "\002\uff01\014\uff01\033\uff01\001\002\000\004\162\u02dc\001" +
    "\002\000\004\161\u02dd\001\002\000\004\020\u02de\001\002" +
    "\000\004\160\u02df\001\002\000\004\020\u02e0\001\002\000" +
    "\004\161\u02e1\001\002\000\004\162\u02e2\001\002\000\004" +
    "\022\u02e3\001\002\000\014\002\uff24\014\uff24\033\uff24\133" +
    "\u02e5\161\u02e4\001\002\000\004\021\u02e6\001\002\000\010" +
    "\002\uff00\014\uff00\033\uff00\001\002\000\004\162\u02e7\001" +
    "\002\000\004\161\u02e8\001\002\000\004\020\u02e9\001\002" +
    "\000\004\160\u02ea\001\002\000\004\020\u02eb\001\002\000" +
    "\004\161\u02ec\001\002\000\004\162\u02ed\001\002\000\004" +
    "\022\u02ee\001\002\000\014\002\uff23\014\uff23\033\uff23\133" +
    "\u02f0\161\u02ef\001\002\000\004\021\u02f1\001\002\000\010" +
    "\002\ufeff\014\ufeff\033\ufeff\001\002\000\004\162\u02f2\001" +
    "\002\000\004\161\u02f3\001\002\000\004\020\u02f4\001\002" +
    "\000\004\160\u02f5\001\002\000\004\020\u02f6\001\002\000" +
    "\004\161\u02f7\001\002\000\004\162\u02f8\001\002\000\004" +
    "\022\u02f9\001\002\000\012\002\uff22\014\uff22\033\uff22\133" +
    "\u02fa\001\002\000\010\002\ufefe\014\ufefe\033\ufefe\001\002" +
    "\000\004\160\u02fc\001\002\000\004\020\u02fd\001\002\000" +
    "\004\022\u02fe\001\002\000\014\002\uff21\014\uff21\033\uff21" +
    "\133\u0300\161\u02ff\001\002\000\004\021\u0301\001\002\000" +
    "\010\002\ufefd\014\ufefd\033\ufefd\001\002\000\004\162\u0302" +
    "\001\002\000\004\161\u0303\001\002\000\004\020\u0304\001" +
    "\002\000\004\160\u0305\001\002\000\004\020\u0306\001\002" +
    "\000\004\161\u0307\001\002\000\004\162\u0308\001\002\000" +
    "\004\161\u0309\001\002\000\004\020\u030a\001\002\000\004" +
    "\160\u030b\001\002\000\004\020\u030c\001\002\000\004\022" +
    "\u030d\001\002\000\014\002\uff20\014\uff20\033\uff20\133\u030f" +
    "\161\u030e\001\002\000\004\021\u0310\001\002\000\010\002" +
    "\ufefc\014\ufefc\033\ufefc\001\002\000\004\162\u0311\001\002" +
    "\000\004\161\u0312\001\002\000\004\020\u0313\001\002\000" +
    "\004\160\u0314\001\002\000\004\020\u0315\001\002\000\004" +
    "\161\u0316\001\002\000\004\162\u0317\001\002\000\004\161" +
    "\u0318\001\002\000\004\020\u0319\001\002\000\004\160\u031a" +
    "\001\002\000\004\020\u031b\001\002\000\004\022\u031c\001" +
    "\002\000\014\002\uff1f\014\uff1f\033\uff1f\133\u031e\161\u031d" +
    "\001\002\000\004\021\u031f\001\002\000\010\002\ufefb\014" +
    "\ufefb\033\ufefb\001\002\000\004\162\u0320\001\002\000\004" +
    "\161\u0321\001\002\000\004\020\u0322\001\002\000\004\160" +
    "\u0323\001\002\000\004\020\u0324\001\002\000\004\161\u0325" +
    "\001\002\000\004\162\u0326\001\002\000\004\161\u0327\001" +
    "\002\000\004\020\u0328\001\002\000\004\160\u0329\001\002" +
    "\000\004\020\u032a\001\002\000\004\022\u032b\001\002\000" +
    "\014\002\uff1e\014\uff1e\033\uff1e\133\u032d\161\u032c\001\002" +
    "\000\004\021\u032e\001\002\000\010\002\ufefa\014\ufefa\033" +
    "\ufefa\001\002\000\004\162\u032f\001\002\000\004\161\u0330" +
    "\001\002\000\004\020\u0331\001\002\000\004\160\u0332\001" +
    "\002\000\004\020\u0333\001\002\000\004\161\u0334\001\002" +
    "\000\004\162\u0335\001\002\000\004\161\u0336\001\002\000" +
    "\004\020\u0337\001\002\000\004\160\u0338\001\002\000\004" +
    "\020\u0339\001\002\000\004\022\u033a\001\002\000\012\002" +
    "\uff1d\014\uff1d\033\uff1d\133\u033b\001\002\000\010\002\ufef9" +
    "\014\ufef9\033\ufef9\001\002\000\004\016\u03bd\001\002\000" +
    "\010\016\u0340\157\u033f\161\u033e\001\002\000\004\160\u039a" +
    "\001\002\000\004\160\u0342\001\002\000\004\160\u0341\001" +
    "\002\000\006\002\uff8c\014\uff8c\001\002\000\004\161\u0343" +
    "\001\002\000\006\156\u0345\160\u0344\001\002\000\004\157" +
    "\u0363\001\002\000\004\021\u0346\001\002\000\004\160\u0347" +
    "\001\002\000\004\157\u0348\001\002\000\004\160\u0349\001" +
    "\002\000\004\022\u034a\001\002\000\004\046\u034b\001\002" +
    "\000\004\160\u034c\001\002\000\004\016\u034d\001\002\000" +
    "\004\160\u034e\001\002\000\004\103\u034f\001\002\000\004" +
    "\106\u0350\001\002\000\004\160\u0351\001\002\000\004\111" +
    "\u0352\001\002\000\004\160\u0353\001\002\000\004\157\u0354" +
    "\001\002\000\004\160\u0355\001\002\000\004\031\u0356\001" +
    "\002\000\004\160\u0357\001\002\000\004\157\u0358\001\002" +
    "\000\004\160\u0359\001\002\000\004\042\u035a\001\002\000" +
    "\004\043\u035b\001\002\000\004\160\u035c\001\002\000\004" +
    "\157\u035d\001\002\000\004\160\u035e\001\002\000\004\161" +
    "\u035f\001\002\000\004\160\u0360\001\002\000\004\157\u0361" +
    "\001\002\000\004\160\u0362\001\002\000\006\002\uff83\014" +
    "\uff83\001\002\000\004\160\u0364\001\002\000\004\016\u0365" +
    "\001\002\000\004\160\u0366\001\002\000\006\017\u0368\103" +
    "\u0367\001\002\000\004\106\u0372\001\002\000\004\160\u0369" +
    "\001\002\000\004\032\u036a\001\002\000\004\162\u036b\001" +
    "\002\000\004\030\u036c\001\002\000\004\162\u036d\001\002" +
    "\000\004\041\u036e\001\002\000\004\043\u036f\001\002\000" +
    "\004\160\u0370\001\002\000\004\047\u0371\001\002\000\006" +
    "\002\uff84\014\uff84\001\002\000\004\160\u0373\001\002\000" +
    "\004\111\u0374\001\002\000\004\160\u0375\001\002\000\004" +
    "\157\u0376\001\002\000\004\160\u0377\001\002\000\004\031" +
    "\u0378\001\002\000\004\160\u0379\001\002\000\004\157\u037a" +
    "\001\002\000\004\160\u037b\001\002\000\004\103\u037c\001" +
    "\002\000\004\106\u037d\001\002\000\004\160\u037e\001\002" +
    "\000\004\111\u037f\001\002\000\004\160\u0380\001\002\000" +
    "\004\157\u0381\001\002\000\004\160\u0382\001\002\000\004" +
    "\031\u0383\001\002\000\004\160\u0384\001\002\000\004\157" +
    "\u0385\001\002\000\004\160\u0386\001\002\000\004\103\u0387" +
    "\001\002\000\004\106\u0388\001\002\000\004\160\u0389\001" +
    "\002\000\004\111\u038a\001\002\000\004\160\u038b\001\002" +
    "\000\004\157\u038c\001\002\000\004\160\u038d\001\002\000" +
    "\004\031\u038e\001\002\000\004\160\u038f\001\002\000\004" +
    "\157\u0390\001\002\000\004\160\u0391\001\002\000\004\017" +
    "\u0392\001\002\000\004\160\u0393\001\002\000\004\157\u0394" +
    "\001\002\000\004\160\u0395\001\002\000\004\031\u0396\001" +
    "\002\000\004\020\u0397\001\002\000\004\160\u0398\001\002" +
    "\000\004\020\u0399\001\002\000\006\002\uff82\014\uff82\001" +
    "\002\000\006\016\u039c\161\u039b\001\002\000\004\160\u03aa" +
    "\001\002\000\004\160\u039d\001\002\000\004\161\u039e\001" +
    "\002\000\004\160\u039f\001\002\000\004\161\u03a0\001\002" +
    "\000\004\160\u03a1\001\002\000\004\161\u03a2\001\002\000" +
    "\004\160\u03a3\001\002\000\004\161\u03a4\001\002\000\004" +
    "\160\u03a5\001\002\000\004\161\u03a6\001\002\000\004\160" +
    "\u03a7\001\002\000\004\161\u03a8\001\002\000\004\160\u03a9" +
    "\001\002\000\006\002\uff86\014\uff86\001\002\000\006\016" +
    "\u03ac\161\u03ab\001\002\000\004\160\u03ae\001\002\000\004" +
    "\160\u03ad\001\002\000\006\002\uff8b\014\uff8b\001\002\000" +
    "\006\016\u03b0\161\u03af\001\002\000\004\160\u03b2\001\002" +
    "\000\004\160\u03b1\001\002\000\006\002\uff8a\014\uff8a\001" +
    "\002\000\006\016\u03b4\161\u03b3\001\002\000\004\160\u03b6" +
    "\001\002\000\004\160\u03b5\001\002\000\006\002\uff89\014" +
    "\uff89\001\002\000\006\016\u03b8\161\u03b7\001\002\000\004" +
    "\160\u03ba\001\002\000\004\160\u03b9\001\002\000\006\002" +
    "\uff88\014\uff88\001\002\000\004\016\u03bb\001\002\000\004" +
    "\160\u03bc\001\002\000\006\002\uff87\014\uff87\001\002\000" +
    "\004\160\u03be\001\002\000\010\002\uff8d\014\uff8d\017\u03bf" +
    "\001\002\000\004\160\u03c0\001\002\000\004\032\u03c1\001" +
    "\002\000\004\162\u03c2\001\002\000\004\030\u03c3\001\002" +
    "\000\004\162\u03c4\001\002\000\004\041\u03c5\001\002\000" +
    "\004\043\u03c6\001\002\000\004\160\u03c7\001\002\000\004" +
    "\047\u03c8\001\002\000\006\002\uff85\014\uff85\001\002\000" +
    "\004\160\u03ca\001\002\000\012\002\ufef3\017\u03cb\034\ufef3" +
    "\035\ufef3\001\002\000\004\160\u03cc\001\002\000\004\031" +
    "\u03cd\001\002\000\006\020\u03cf\162\u03ce\001\002\000\010" +
    "\002\ufef1\034\ufef1\035\ufef1\001\002\000\004\160\u03d0\001" +
    "\002\000\004\020\u03d1\001\002\000\010\002\ufef2\034\ufef2" +
    "\035\ufef2\001\002\000\006\002\uffce\014\020\001\002\000" +
    "\006\002\uffcd\014\020\001\002\000\006\002\uffcc\014\020" +
    "\001\002\000\006\002\uffcb\014\020\001\002\000\006\002" +
    "\uffca\014\020\001\002\000\006\002\uffc9\014\020\001\002" +
    "\000\006\002\uffc8\014\020\001\002\000\006\002\uffc7\014" +
    "\020\001\002\000\006\002\uffc6\014\020\001\002\000\006" +
    "\002\uffc5\014\020\001\002\000\006\002\uffc4\014\020\001" +
    "\002\000\004\002\uffc3\001\002\000\010\002\uffa0\034\017" +
    "\035\013\001\002\000\004\034\017\001\002\000\004\002" +
    "\uff9f\001\002\000\006\002\uff9e\034\017\001\002\000\006" +
    "\002\uff9d\034\017\001\002\000\006\002\uff9c\034\017\001" +
    "\002\000\006\002\uff9b\034\017\001\002\000\006\002\uff9a" +
    "\034\017\001\002\000\006\002\uff99\034\017\001\002\000" +
    "\004\002\uff98\001\002\000\006\002\uffc1\033\021\001\002" +
    "\000\006\002\uffc0\033\021\001\002\000\006\002\uffbf\033" +
    "\021\001\002\000\006\002\uffbe\033\021\001\002\000\006" +
    "\002\uffbd\033\021\001\002\000\006\002\uffbc\033\021\001" +
    "\002\000\004\002\uffbb\001\002\000\004\037\u03f0\001\002" +
    "\000\004\160\u03f1\001\002\000\004\031\u03f2\001\002\000" +
    "\004\020\u03f3\001\002\000\004\160\u03f4\001\002\000\004" +
    "\020\u03f5\001\002\000\006\017\u03f7\161\u03f6\001\002\000" +
    "\004\160\u03fe\001\002\000\004\160\u03f8\001\002\000\004" +
    "\031\u03f9\001\002\000\004\020\u03fa\001\002\000\004\160" +
    "\u03fb\001\002\000\004\020\u03fc\001\002\000\004\027\u03fd" +
    "\001\002\000\006\002\ufef0\035\ufef0\001\002\000\004\031" +
    "\u03ff\001\002\000\004\020\u0400\001\002\000\004\160\u0401" +
    "\001\002\000\004\020\u0402\001\002\000\006\017\u0404\161" +
    "\u0403\001\002\000\004\160\u040b\001\002\000\004\160\u0405" +
    "\001\002\000\004\031\u0406\001\002\000\004\020\u0407\001" +
    "\002\000\004\160\u0408\001\002\000\004\020\u0409\001\002" +
    "\000\004\027\u040a\001\002\000\006\002\ufeef\035\ufeef\001" +
    "\002\000\004\031\u040c\001\002\000\004\020\u040d\001\002" +
    "\000\004\160\u040e\001\002\000\004\020\u040f\001\002\000" +
    "\006\017\u0411\161\u0410\001\002\000\004\160\u0418\001\002" +
    "\000\004\160\u0412\001\002\000\004\031\u0413\001\002\000" +
    "\004\020\u0414\001\002\000\004\160\u0415\001\002\000\004" +
    "\020\u0416\001\002\000\004\027\u0417\001\002\000\006\002" +
    "\ufeee\035\ufeee\001\002\000\004\031\u0419\001\002\000\004" +
    "\020\u041a\001\002\000\004\160\u041b\001\002\000\004\020" +
    "\u041c\001\002\000\006\017\u041e\161\u041d\001\002\000\004" +
    "\160\u0425\001\002\000\004\160\u041f\001\002\000\004\031" +
    "\u0420\001\002\000\004\020\u0421\001\002\000\004\160\u0422" +
    "\001\002\000\004\020\u0423\001\002\000\004\027\u0424\001" +
    "\002\000\006\002\ufeed\035\ufeed\001\002\000\004\031\u0426" +
    "\001\002\000\004\020\u0427\001\002\000\004\160\u0428\001" +
    "\002\000\004\020\u0429\001\002\000\004\017\u042a\001\002" +
    "\000\004\160\u042b\001\002\000\004\031\u042c\001\002\000" +
    "\004\020\u042d\001\002\000\004\160\u042e\001\002\000\004" +
    "\020\u042f\001\002\000\004\027\u0430\001\002\000\006\002" +
    "\ufeec\035\ufeec\001\002\000\006\002\uff96\035\013\001\002" +
    "\000\006\002\uff95\035\013\001\002\000\006\002\uff94\035" +
    "\013\001\002\000\006\002\uff93\035\013\001\002\000\006" +
    "\002\uff92\035\013\001\002\000\006\002\uff91\035\013\001" +
    "\002\000\006\002\uff90\035\013\001\002\000\004\002\uff8f" +
    "\001\002\000\004\160\u043a\001\002\000\004\002\uffd0\001" +
    "\002\000\004\002\001\001\002\000\004\160\u044d\001\002" +
    "\000\004\160\u043e\001\002\000\006\002\uffa9\161\u043f\001" +
    "\002\000\004\160\u0440\001\002\000\006\002\uffa8\161\u0441" +
    "\001\002\000\004\160\u0442\001\002\000\006\002\uffa7\161" +
    "\u0443\001\002\000\004\160\u0444\001\002\000\006\002\uffa6" +
    "\161\u0445\001\002\000\004\160\u0446\001\002\000\006\002" +
    "\uffa5\161\u0447\001\002\000\004\160\u0448\001\002\000\006" +
    "\002\uffa4\161\u0449\001\002\000\004\160\u044a\001\002\000" +
    "\006\002\uffa3\161\u044b\001\002\000\004\160\u044c\001\002" +
    "\000\004\002\uffa2\001\002\000\006\002\uffb1\012\u044e\001" +
    "\002\000\004\160\u044f\001\002\000\010\007\u0450\014\020" +
    "\033\021\001\002\000\004\013\u045a\001\002\000\006\002" +
    "\uffac\014\020\001\002\000\004\007\u0450\001\002\000\006" +
    "\002\uffae\033\021\001\002\000\004\033\021\001\002\000" +
    "\004\002\uffad\001\002\000\006\002\uffb0\007\u0450\001\002" +
    "\000\004\002\uffaf\001\002\000\006\002\uffab\014\020\001" +
    "\002\000\004\002\uffaa\001\002\000\004\160\u045b\001\002" +
    "\000\004\021\u045c\001\002\000\004\160\u045d\001\002\000" +
    "\004\006\u045e\001\002\000\004\021\u045f\001\002\000\004" +
    "\162\u0460\001\002\000\004\022\u0461\001\002\000\010\022" +
    "\u0463\120\u0464\161\u0462\001\002\000\004\160\u05a2\001\002" +
    "\000\010\002\uff81\007\uff81\033\uff81\001\002\000\004\122" +
    "\u0465\001\002\000\010\022\u0467\123\u0468\161\u0466\001\002" +
    "\000\004\160\u0474\001\002\000\010\002\uff5c\007\uff5c\033" +
    "\uff5c\001\002\000\004\122\u0469\001\002\000\004\021\u046a" +
    "\001\002\000\004\160\u046b\001\002\000\004\022\u046c\001" +
    "\002\000\004\146\u046d\001\002\000\004\160\u046e\001\002" +
    "\000\004\021\u046f\001\002\000\004\160\u0470\001\002\000" +
    "\004\022\u0471\001\002\000\004\022\u0472\001\002\000\012" +
    "\002\uff69\007\uff69\033\uff69\133\u0473\001\002\000\010\002" +
    "\uff6a\007\uff6a\033\uff6a\001\002\000\004\006\u0475\001\002" +
    "\000\004\021\u0476\001\002\000\004\162\u0477\001\002\000" +
    "\006\022\u0479\161\u0478\001\002\000\004\160\u0552\001\002" +
    "\000\014\022\u047b\030\u047d\044\u047e\123\u047c\161\u047a\001" +
    "\002\000\004\160\u04f9\001\002\000\010\002\uff5b\007\uff5b" +
    "\033\uff5b\001\002\000\004\122\u04ee\001\002\000\004\044" +
    "\u04cd\001\002\000\006\022\u0480\161\u047f\001\002\000\004" +
    "\160\u0481\001\002\000\010\002\uff51\007\uff51\033\uff51\001" +
    "\002\000\004\006\u0482\001\002\000\004\021\u0483\001\002" +
    "\000\004\162\u0484\001\002\000\004\022\u0485\001\002\000" +
    "\004\030\u0486\001\002\000\004\044\u0487\001\002\000\006" +
    "\022\u0489\161\u0488\001\002\000\004\160\u048a\001\002\000" +
    "\010\002\uff50\007\uff50\033\uff50\001\002\000\004\006\u048b" +
    "\001\002\000\004\021\u048c\001\002\000\004\162\u048d\001" +
    "\002\000\004\022\u048e\001\002\000\004\044\u048f\001\002" +
    "\000\006\022\u0491\161\u0490\001\002\000\004\160\u0492\001" +
    "\002\000\010\002\uff4f\007\uff4f\033\uff4f\001\002\000\004" +
    "\006\u0493\001\002\000\004\021\u0494\001\002\000\004\162" +
    "\u0495\001\002\000\004\022\u0496\001\002\000\004\030\u0497" +
    "\001\002\000\004\044\u0498\001\002\000\006\022\u049a\161" +
    "\u0499\001\002\000\004\160\u049b\001\002\000\010\002\uff4e" +
    "\007\uff4e\033\uff4e\001\002\000\004\006\u049c\001\002\000" +
    "\004\021\u049d\001\002\000\004\162\u049e\001\002\000\004" +
    "\022\u049f\001\002\000\004\044\u04a0\001\002\000\006\022" +
    "\u04a2\161\u04a1\001\002\000\004\160\u04a3\001\002\000\010" +
    "\002\uff4d\007\uff4d\033\uff4d\001\002\000\004\006\u04a4\001" +
    "\002\000\004\021\u04a5\001\002\000\004\162\u04a6\001\002" +
    "\000\004\022\u04a7\001\002\000\004\030\u04a8\001\002\000" +
    "\004\044\u04a9\001\002\000\006\022\u04ab\161\u04aa\001\002" +
    "\000\004\160\u04ac\001\002\000\010\002\uff4c\007\uff4c\033" +
    "\uff4c\001\002\000\004\006\u04ad\001\002\000\004\021\u04ae" +
    "\001\002\000\004\162\u04af\001\002\000\004\022\u04b0\001" +
    "\002\000\004\044\u04b1\001\002\000\006\022\u04b3\161\u04b2" +
    "\001\002\000\004\160\u04b4\001\002\000\010\002\uff4b\007" +
    "\uff4b\033\uff4b\001\002\000\004\006\u04b5\001\002\000\004" +
    "\021\u04b6\001\002\000\004\162\u04b7\001\002\000\004\022" +
    "\u04b8\001\002\000\004\030\u04b9\001\002\000\004\044\u04ba" +
    "\001\002\000\006\022\u04bc\161\u04bb\001\002\000\004\160" +
    "\u04bd\001\002\000\010\002\uff4a\007\uff4a\033\uff4a\001\002" +
    "\000\004\006\u04be\001\002\000\004\021\u04bf\001\002\000" +
    "\004\162\u04c0\001\002\000\004\022\u04c1\001\002\000\004" +
    "\044\u04c2\001\002\000\006\022\u04c4\161\u04c3\001\002\000" +
    "\004\160\u04c5\001\002\000\010\002\uff49\007\uff49\033\uff49" +
    "\001\002\000\004\006\u04c6\001\002\000\004\021\u04c7\001" +
    "\002\000\004\162\u04c8\001\002\000\004\022\u04c9\001\002" +
    "\000\004\030\u04ca\001\002\000\004\044\u04cb\001\002\000" +
    "\004\022\u04cc\001\002\000\010\002\uff48\007\uff48\033\uff48" +
    "\001\002\000\004\161\u04ce\001\002\000\004\160\u04cf\001" +
    "\002\000\004\006\u04d0\001\002\000\004\021\u04d1\001\002" +
    "\000\004\162\u04d2\001\002\000\004\022\u04d3\001\002\000" +
    "\004\030\u04d4\001\002\000\004\044\u04d5\001\002\000\006" +
    "\022\u04d7\161\u04d6\001\002\000\004\160\u04d9\001\002\000" +
    "\004\133\u04d8\001\002\000\010\002\uff6b\007\uff6b\033\uff6b" +
    "\001\002\000\004\006\u04da\001\002\000\004\021\u04db\001" +
    "\002\000\004\162\u04dc\001\002\000\004\022\u04dd\001\002" +
    "\000\004\030\u04de\001\002\000\004\044\u04df\001\002\000" +
    "\006\022\u04e0\123\u04e1\001\002\000\004\133\u04ed\001\002" +
    "\000\004\122\u04e2\001\002\000\004\021\u04e3\001\002\000" +
    "\004\160\u04e4\001\002\000\004\022\u04e5\001\002\000\004" +
    "\146\u04e6\001\002\000\004\160\u04e7\001\002\000\004\021" +
    "\u04e8\001\002\000\004\160\u04e9\001\002\000\004\022\u04ea" +
    "\001\002\000\004\022\u04eb\001\002\000\012\002\uff46\007" +
    "\uff46\033\uff46\133\u04ec\001\002\000\010\002\uff47\007\uff47" +
    "\033\uff47\001\002\000\010\002\uff6c\007\uff6c\033\uff6c\001" +
    "\002\000\004\021\u04ef\001\002\000\004\160\u04f0\001\002" +
    "\000\004\022\u04f1\001\002\000\004\146\u04f2\001\002\000" +
    "\004\160\u04f3\001\002\000\004\021\u04f4\001\002\000\004" +
    "\160\u04f5\001\002\000\004\022\u04f6\001\002\000\004\022" +
    "\u04f7\001\002\000\012\002\uff68\007\uff68\033\uff68\133\u04f8" +
    "\001\002\000\010\002\uff67\007\uff67\033\uff67\001\002\000" +
    "\004\006\u04fa\001\002\000\004\021\u04fb\001\002\000\004" +
    "\162\u04fc\001\002\000\004\022\u04fd\001\002\000\006\123" +
    "\u04ff\161\u04fe\001\002\000\004\160\u050b\001\002\000\004" +
    "\122\u0500\001\002\000\004\021\u0501\001\002\000\004\160" +
    "\u0502\001\002\000\004\022\u0503\001\002\000\004\146\u0504" +
    "\001\002\000\004\160\u0505\001\002\000\004\021\u0506\001" +
    "\002\000\004\160\u0507\001\002\000\004\022\u0508\001\002" +
    "\000\004\022\u0509\001\002\000\012\002\uff65\007\uff65\033" +
    "\uff65\133\u050a\001\002\000\010\002\uff66\007\uff66\033\uff66" +
    "\001\002\000\004\006\u050c\001\002\000\004\021\u050d\001" +
    "\002\000\004\162\u050e\001\002\000\004\022\u050f\001\002" +
    "\000\006\123\u0511\161\u0510\001\002\000\004\160\u051d\001" +
    "\002\000\004\122\u0512\001\002\000\004\021\u0513\001\002" +
    "\000\004\160\u0514\001\002\000\004\022\u0515\001\002\000" +
    "\004\146\u0516\001\002\000\004\160\u0517\001\002\000\004" +
    "\021\u0518\001\002\000\004\160\u0519\001\002\000\004\022" +
    "\u051a\001\002\000\004\022\u051b\001\002\000\012\002\uff63" +
    "\007\uff63\033\uff63\133\u051c\001\002\000\010\002\uff64\007" +
    "\uff64\033\uff64\001\002\000\004\006\u051e\001\002\000\004" +
    "\021\u051f\001\002\000\004\162\u0520\001\002\000\004\022" +
    "\u0521\001\002\000\006\123\u0523\161\u0522\001\002\000\004" +
    "\160\u052f\001\002\000\004\122\u0524\001\002\000\004\021" +
    "\u0525\001\002\000\004\160\u0526\001\002\000\004\022\u0527" +
    "\001\002\000\004\146\u0528\001\002\000\004\160\u0529\001" +
    "\002\000\004\021\u052a\001\002\000\004\160\u052b\001\002" +
    "\000\004\022\u052c\001\002\000\004\022\u052d\001\002\000" +
    "\012\002\uff61\007\uff61\033\uff61\133\u052e\001\002\000\010" +
    "\002\uff62\007\uff62\033\uff62\001\002\000\004\006\u0530\001" +
    "\002\000\004\021\u0531\001\002\000\004\162\u0532\001\002" +
    "\000\004\022\u0533\001\002\000\006\123\u0535\161\u0534\001" +
    "\002\000\004\160\u0541\001\002\000\004\122\u0536\001\002" +
    "\000\004\021\u0537\001\002\000\004\160\u0538\001\002\000" +
    "\004\022\u0539\001\002\000\004\146\u053a\001\002\000\004" +
    "\160\u053b\001\002\000\004\021\u053c\001\002\000\004\160" +
    "\u053d\001\002\000\004\022\u053e\001\002\000\004\022\u053f" +
    "\001\002\000\012\002\uff5f\007\uff5f\033\uff5f\133\u0540\001" +
    "\002\000\010\002\uff60\007\uff60\033\uff60\001\002\000\004" +
    "\006\u0542\001\002\000\004\021\u0543\001\002\000\004\162" +
    "\u0544\001\002\000\004\022\u0545\001\002\000\004\123\u0546" +
    "\001\002\000\004\122\u0547\001\002\000\004\021\u0548\001" +
    "\002\000\004\160\u0549\001\002\000\004\022\u054a\001\002" +
    "\000\004\146\u054b\001\002\000\004\160\u054c\001\002\000" +
    "\004\021\u054d\001\002\000\004\160\u054e\001\002\000\004" +
    "\022\u054f\001\002\000\004\022\u0550\001\002\000\012\002" +
    "\uff5d\007\uff5d\033\uff5d\133\u0551\001\002\000\010\002\uff5e" +
    "\007\uff5e\033\uff5e\001\002\000\004\006\u0553\001\002\000" +
    "\004\021\u0554\001\002\000\004\162\u0555\001\002\000\004" +
    "\022\u0556\001\002\000\004\030\u0557\001\002\000\004\044" +
    "\u0558\001\002\000\006\022\u055a\161\u0559\001\002\000\004" +
    "\160\u055b\001\002\000\010\002\uff5a\007\uff5a\033\uff5a\001" +
    "\002\000\004\006\u055c\001\002\000\004\021\u055d\001\002" +
    "\000\004\162\u055e\001\002\000\004\022\u055f\001\002\000" +
    "\004\030\u0560\001\002\000\004\044\u0561\001\002\000\006" +
    "\022\u0563\161\u0562\001\002\000\004\160\u0564\001\002\000" +
    "\010\002\uff59\007\uff59\033\uff59\001\002\000\004\006\u0565" +
    "\001\002\000\004\021\u0566\001\002\000\004\162\u0567\001" +
    "\002\000\004\022\u0568\001\002\000\004\030\u0569\001\002" +
    "\000\004\044\u056a\001\002\000\006\022\u056c\161\u056b\001" +
    "\002\000\004\160\u056d\001\002\000\010\002\uff58\007\uff58" +
    "\033\uff58\001\002\000\004\006\u056e\001\002\000\004\021" +
    "\u056f\001\002\000\004\162\u0570\001\002\000\004\022\u0571" +
    "\001\002\000\004\030\u0572\001\002\000\004\044\u0573\001" +
    "\002\000\006\022\u0575\161\u0574\001\002\000\004\160\u0576" +
    "\001\002\000\010\002\uff57\007\uff57\033\uff57\001\002\000" +
    "\004\006\u0577\001\002\000\004\021\u0578\001\002\000\004" +
    "\162\u0579\001\002\000\004\022\u057a\001\002\000\004\030" +
    "\u057b\001\002\000\004\044\u057c\001\002\000\006\022\u057e" +
    "\161\u057d\001\002\000\004\160\u057f\001\002\000\010\002" +
    "\uff56\007\uff56\033\uff56\001\002\000\004\006\u0580\001\002" +
    "\000\004\021\u0581\001\002\000\004\162\u0582\001\002\000" +
    "\004\022\u0583\001\002\000\004\030\u0584\001\002\000\004" +
    "\044\u0585\001\002\000\006\022\u0587\161\u0586\001\002\000" +
    "\004\160\u0588\001\002\000\010\002\uff55\007\uff55\033\uff55" +
    "\001\002\000\004\006\u0589\001\002\000\004\021\u058a\001" +
    "\002\000\004\162\u058b\001\002\000\004\022\u058c\001\002" +
    "\000\004\030\u058d\001\002\000\004\044\u058e\001\002\000" +
    "\006\022\u0590\161\u058f\001\002\000\004\160\u0591\001\002" +
    "\000\010\002\uff54\007\uff54\033\uff54\001\002\000\004\006" +
    "\u0592\001\002\000\004\021\u0593\001\002\000\004\162\u0594" +
    "\001\002\000\004\022\u0595\001\002\000\004\030\u0596\001" +
    "\002\000\004\044\u0597\001\002\000\006\022\u0599\161\u0598" +
    "\001\002\000\004\160\u059a\001\002\000\010\002\uff53\007" +
    "\uff53\033\uff53\001\002\000\004\006\u059b\001\002\000\004" +
    "\021\u059c\001\002\000\004\162\u059d\001\002\000\004\022" +
    "\u059e\001\002\000\004\030\u059f\001\002\000\004\044\u05a0" +
    "\001\002\000\004\022\u05a1\001\002\000\010\002\uff52\007" +
    "\uff52\033\uff52\001\002\000\004\006\u05a3\001\002\000\004" +
    "\021\u05a4\001\002\000\004\162\u05a5\001\002\000\004\022" +
    "\u05a6\001\002\000\012\022\u05a8\030\u05aa\123\u05a9\161\u05a7" +
    "\001\002\000\004\160\u05d6\001\002\000\010\002\uff80\007" +
    "\uff80\033\uff80\001\002\000\004\122\u05c0\001\002\000\004" +
    "\044\u05ab\001\002\000\004\161\u05ac\001\002\000\004\160" +
    "\u05ad\001\002\000\004\006\u05ae\001\002\000\004\021\u05af" +
    "\001\002\000\004\162\u05b0\001\002\000\004\022\u05b1\001" +
    "\002\000\004\030\u05b2\001\002\000\004\044\u05b3\001\002" +
    "\000\004\123\u05b4\001\002\000\004\122\u05b5\001\002\000" +
    "\004\021\u05b6\001\002\000\004\160\u05b7\001\002\000\004" +
    "\022\u05b8\001\002\000\004\146\u05b9\001\002\000\004\160" +
    "\u05ba\001\002\000\004\021\u05bb\001\002\000\004\160\u05bc" +
    "\001\002\000\004\022\u05bd\001\002\000\004\022\u05be\001" +
    "\002\000\012\002\uff42\007\uff42\033\uff42\133\u05bf\001\002" +
    "\000\010\002\uff43\007\uff43\033\uff43\001\002\000\004\021" +
    "\u05c1\001\002\000\004\160\u05c2\001\002\000\004\022\u05c3" +
    "\001\002\000\004\146\u05c4\001\002\000\004\160\u05c5\001" +
    "\002\000\004\021\u05c6\001\002\000\004\160\u05c7\001\002" +
    "\000\004\022\u05c8\001\002\000\004\161\u05c9\001\002\000" +
    "\004\123\u05ca\001\002\000\004\122\u05cb\001\002\000\004" +
    "\021\u05cc\001\002\000\004\160\u05cd\001\002\000\004\022" +
    "\u05ce\001\002\000\004\146\u05cf\001\002\000\004\160\u05d0" +
    "\001\002\000\004\021\u05d1\001\002\000\004\160\u05d2\001" +
    "\002\000\004\022\u05d3\001\002\000\004\022\u05d4\001\002" +
    "\000\012\002\uff45\007\uff45\033\uff45\133\u05d5\001\002\000" +
    "\010\002\uff44\007\uff44\033\uff44\001\002\000\004\006\u05d7" +
    "\001\002\000\004\021\u05d8\001\002\000\004\162\u05d9\001" +
    "\002\000\004\022\u05da\001\002\000\006\022\u05dc\161\u05db" +
    "\001\002\000\004\160\u05dd\001\002\000\010\002\uff7f\007" +
    "\uff7f\033\uff7f\001\002\000\004\006\u05de\001\002\000\004" +
    "\021\u05df\001\002\000\004\162\u05e0\001\002\000\004\022" +
    "\u05e1\001\002\000\006\022\u05e3\161\u05e2\001\002\000\004" +
    "\160\u05e4\001\002\000\010\002\uff7e\007\uff7e\033\uff7e\001" +
    "\002\000\004\006\u05e5\001\002\000\004\021\u05e6\001\002" +
    "\000\004\162\u05e7\001\002\000\004\022\u05e8\001\002\000" +
    "\006\022\u05ea\161\u05e9\001\002\000\004\160\u05eb\001\002" +
    "\000\010\002\uff7d\007\uff7d\033\uff7d\001\002\000\004\006" +
    "\u05ec\001\002\000\004\021\u05ed\001\002\000\004\162\u05ee" +
    "\001\002\000\004\022\u05ef\001\002\000\006\022\u05f1\161" +
    "\u05f0\001\002\000\004\160\u05f2\001\002\000\010\002\uff7c" +
    "\007\uff7c\033\uff7c\001\002\000\004\006\u05f3\001\002\000" +
    "\004\021\u05f4\001\002\000\004\162\u05f5\001\002\000\004" +
    "\022\u05f6\001\002\000\006\022\u05f8\161\u05f7\001\002\000" +
    "\004\160\u05f9\001\002\000\010\002\uff7b\007\uff7b\033\uff7b" +
    "\001\002\000\004\006\u05fa\001\002\000\004\021\u05fb\001" +
    "\002\000\004\162\u05fc\001\002\000\004\022\u05fd\001\002" +
    "\000\006\022\u05ff\161\u05fe\001\002\000\004\160\u0600\001" +
    "\002\000\010\002\uff7a\007\uff7a\033\uff7a\001\002\000\004" +
    "\006\u0601\001\002\000\004\021\u0602\001\002\000\004\162" +
    "\u0603\001\002\000\004\022\u0604\001\002\000\006\022\u0606" +
    "\161\u0605\001\002\000\004\160\u0607\001\002\000\010\002" +
    "\uff79\007\uff79\033\uff79\001\002\000\004\006\u0608\001\002" +
    "\000\004\021\u0609\001\002\000\004\162\u060a\001\002\000" +
    "\004\022\u060b\001\002\000\006\022\u060d\161\u060c\001\002" +
    "\000\004\160\u060e\001\002\000\010\002\uff78\007\uff78\033" +
    "\uff78\001\002\000\004\006\u060f\001\002\000\004\021\u0610" +
    "\001\002\000\004\162\u0611\001\002\000\004\022\u0612\001" +
    "\002\000\006\022\u0614\161\u0613\001\002\000\004\160\u0615" +
    "\001\002\000\010\002\uff77\007\uff77\033\uff77\001\002\000" +
    "\004\006\u0616\001\002\000\004\021\u0617\001\002\000\004" +
    "\162\u0618\001\002\000\004\022\u0619\001\002\000\006\022" +
    "\u061b\161\u061a\001\002\000\004\160\u061c\001\002\000\010" +
    "\002\uff76\007\uff76\033\uff76\001\002\000\004\006\u061d\001" +
    "\002\000\004\021\u061e\001\002\000\004\162\u061f\001\002" +
    "\000\004\022\u0620\001\002\000\006\022\u0622\161\u0621\001" +
    "\002\000\004\160\u0623\001\002\000\010\002\uff75\007\uff75" +
    "\033\uff75\001\002\000\004\006\u0624\001\002\000\004\021" +
    "\u0625\001\002\000\004\162\u0626\001\002\000\004\022\u0627" +
    "\001\002\000\006\022\u0629\161\u0628\001\002\000\004\160" +
    "\u062a\001\002\000\010\002\uff74\007\uff74\033\uff74\001\002" +
    "\000\004\006\u062b\001\002\000\004\021\u062c\001\002\000" +
    "\004\162\u062d\001\002\000\004\022\u062e\001\002\000\006" +
    "\022\u0630\161\u062f\001\002\000\004\160\u0631\001\002\000" +
    "\010\002\uff73\007\uff73\033\uff73\001\002\000\004\006\u0632" +
    "\001\002\000\004\021\u0633\001\002\000\004\162\u0634\001" +
    "\002\000\004\022\u0635\001\002\000\006\022\u0637\161\u0636" +
    "\001\002\000\004\160\u0638\001\002\000\010\002\uff72\007" +
    "\uff72\033\uff72\001\002\000\004\006\u0639\001\002\000\004" +
    "\021\u063a\001\002\000\004\162\u063b\001\002\000\004\022" +
    "\u063c\001\002\000\006\022\u063e\161\u063d\001\002\000\004" +
    "\160\u063f\001\002\000\010\002\uff71\007\uff71\033\uff71\001" +
    "\002\000\004\006\u0640\001\002\000\004\021\u0641\001\002" +
    "\000\004\162\u0642\001\002\000\004\022\u0643\001\002\000" +
    "\006\022\u0645\161\u0644\001\002\000\004\160\u0646\001\002" +
    "\000\010\002\uff70\007\uff70\033\uff70\001\002\000\004\006" +
    "\u0647\001\002\000\004\021\u0648\001\002\000\004\162\u0649" +
    "\001\002\000\004\022\u064a\001\002\000\006\022\u064c\161" +
    "\u064b\001\002\000\004\160\u064d\001\002\000\010\002\uff6f" +
    "\007\uff6f\033\uff6f\001\002\000\004\006\u064e\001\002\000" +
    "\004\021\u064f\001\002\000\004\162\u0650\001\002\000\004" +
    "\022\u0651\001\002\000\006\022\u0653\161\u0652\001\002\000" +
    "\004\160\u0654\001\002\000\010\002\uff6e\007\uff6e\033\uff6e" +
    "\001\002\000\004\006\u0655\001\002\000\004\021\u0656\001" +
    "\002\000\004\162\u0657\001\002\000\004\022\u0658\001\002" +
    "\000\004\022\u0659\001\002\000\010\002\uff6d\007\uff6d\033" +
    "\uff6d\001\002\000\004\160\u065b\001\002\000\006\002\000" +
    "\012\u065c\001\002\000\004\160\u065d\001\002\000\006\002" +
    "\uffd1\007\u0450\001\002\000\006\002\ufffe\007\u0450\001\002" +
    "\000\006\002\ufffd\007\u0450\001\002\000\006\002\ufffc\007" +
    "\u0450\001\002\000\006\002\ufffb\007\u0450\001\002\000\010" +
    "\002\ufffa\007\u0450\033\021\001\002\000\006\002\ufff9\007" +
    "\u0450\001\002\000\006\002\uffba\033\021\001\002\000\006" +
    "\002\uffb9\033\021\001\002\000\006\002\uffb8\033\021\001" +
    "\002\000\006\002\uffb7\033\021\001\002\000\006\002\uffb6" +
    "\014\020\001\002\000\006\002\uffb5\014\020\001\002\000" +
    "\006\002\uffb4\014\020\001\002\000\006\002\uffb3\014\020" +
    "\001\002\000\004\002\uffb2\001\002\000\006\002\ufff8\007" +
    "\u0450\001\002\000\006\002\ufff7\007\u0450\001\002\000\006" +
    "\002\ufff6\007\u0450\001\002\000\006\002\ufff5\007\u0450\001" +
    "\002\000\006\002\ufff4\007\u0450\001\002\000\004\007\u0450" +
    "\001\002\000\006\002\ufff3\007\u0450\001\002\000\006\002" +
    "\ufff2\007\u0450\001\002\000\006\002\ufff1\007\u0450\001\002" +
    "\000\006\002\ufff0\007\u0450\001\002\000\006\002\uffef\007" +
    "\u0450\001\002\000\006\002\uffee\007\u0450\001\002\000\006" +
    "\002\uffed\007\u0450\001\002\000\006\002\uffec\007\u0450\001" +
    "\002\000\006\002\uffeb\007\u0450\001\002\000\006\002\uffea" +
    "\007\u0450\001\002\000\006\002\uffe9\007\u0450\001\002\000" +
    "\006\002\uffe8\007\u0450\001\002\000\006\002\uffe7\007\u0450" +
    "\001\002\000\006\002\uffe6\007\u0450\001\002\000\006\002" +
    "\uffe5\007\u0450\001\002\000\006\002\uffe4\007\u0450\001\002" +
    "\000\006\002\uffe3\007\u0450\001\002\000\006\002\uffe2\007" +
    "\u0450\001\002\000\006\002\uffe1\007\u0450\001\002\000\006" +
    "\002\uffe0\007\u0450\001\002\000\006\002\uffdf\007\u0450\001" +
    "\002\000\006\002\uffde\007\u0450\001\002\000\006\002\uffdd" +
    "\007\u0450\001\002\000\006\002\uffdc\007\u0450\001\002\000" +
    "\006\002\uffdb\007\u0450\001\002\000\006\002\uffda\007\u0450" +
    "\001\002\000\006\002\uffd9\007\u0450\001\002\000\006\002" +
    "\uffd8\007\u0450\001\002\000\006\002\uffd7\007\u0450\001\002" +
    "\000\006\002\uffd6\007\u0450\001\002\000\006\002\uffd5\007" +
    "\u0450\001\002\000\006\002\uffd4\007\u0450\001\002\000\006" +
    "\002\uffd3\007\u0450\001\002\000\004\002\uffd2\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0692\000\004\002\005\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\005\015\006\013\007\014\010\011\001\001\000\002\001" +
    "\001\000\004\010\u0430\001\001\000\002\001\001\000\004" +
    "\006\u03e7\001\001\000\004\007\u03dd\001\001\000\004\005" +
    "\u03d1\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\u03d2\001\001" +
    "\000\004\005\u03d3\001\001\000\004\005\u03d4\001\001\000" +
    "\004\005\u03d5\001\001\000\004\005\u03d6\001\001\000\004" +
    "\005\u03d7\001\001\000\004\005\u03d8\001\001\000\004\005" +
    "\u03d9\001\001\000\004\005\u03da\001\001\000\004\005\u03db" +
    "\001\001\000\004\005\u03dc\001\001\000\002\001\001\000" +
    "\006\007\u03de\010\u03df\001\001\000\004\007\u03e0\001\001" +
    "\000\002\001\001\000\004\007\u03e1\001\001\000\004\007" +
    "\u03e2\001\001\000\004\007\u03e3\001\001\000\004\007\u03e4" +
    "\001\001\000\004\007\u03e5\001\001\000\004\007\u03e6\001" +
    "\001\000\002\001\001\000\004\006\u03e8\001\001\000\004" +
    "\006\u03e9\001\001\000\004\006\u03ea\001\001\000\004\006" +
    "\u03eb\001\001\000\004\006\u03ec\001\001\000\004\006\u03ed" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\u0431\001\001\000\004\010\u0432\001\001\000\004\010\u0433" +
    "\001\001\000\004\010\u0434\001\001\000\004\010\u0435\001" +
    "\001\000\004\010\u0436\001\001\000\004\010\u0437\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\004\u0451\005\u0450\006\u0452\001\001\000\002" +
    "\001\001\000\004\005\u0457\001\001\000\004\004\u0455\001" +
    "\001\000\004\006\u0453\001\001\000\004\006\u0454\001\001" +
    "\000\002\001\001\000\004\004\u0456\001\001\000\002\001" +
    "\001\000\004\005\u0458\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\004\u065d\001\001\000\004\004" +
    "\u065e\001\001\000\004\004\u065f\001\001\000\004\004\u0660" +
    "\001\001\000\004\004\u0661\001\001\000\006\004\u0662\006" +
    "\u0663\001\001\000\004\004\u066c\001\001\000\004\006\u0664" +
    "\001\001\000\004\006\u0665\001\001\000\004\006\u0666\001" +
    "\001\000\004\006\u0667\001\001\000\004\005\u0668\001\001" +
    "\000\004\005\u0669\001\001\000\004\005\u066a\001\001\000" +
    "\004\005\u066b\001\001\000\002\001\001\000\004\004\u066d" +
    "\001\001\000\004\004\u066e\001\001\000\004\004\u066f\001" +
    "\001\000\004\004\u0670\001\001\000\004\004\u0671\001\001" +
    "\000\004\004\u0672\001\001\000\004\004\u0673\001\001\000" +
    "\004\004\u0674\001\001\000\004\004\u0675\001\001\000\004" +
    "\004\u0676\001\001\000\004\004\u0677\001\001\000\004\004" +
    "\u0678\001\001\000\004\004\u0679\001\001\000\004\004\u067a" +
    "\001\001\000\004\004\u067b\001\001\000\004\004\u067c\001" +
    "\001\000\004\004\u067d\001\001\000\004\004\u067e\001\001" +
    "\000\004\004\u067f\001\001\000\004\004\u0680\001\001\000" +
    "\004\004\u0681\001\001\000\004\004\u0682\001\001\000\004" +
    "\004\u0683\001\001\000\004\004\u0684\001\001\000\004\004" +
    "\u0685\001\001\000\004\004\u0686\001\001\000\004\004\u0687" +
    "\001\001\000\004\004\u0688\001\001\000\004\004\u0689\001" +
    "\001\000\004\004\u068a\001\001\000\004\004\u068b\001\001" +
    "\000\004\004\u068c\001\001\000\004\004\u068d\001\001\000" +
    "\004\004\u068e\001\001\000\004\004\u068f\001\001\000\004" +
    "\004\u0690\001\001\000\004\004\u0691\001\001\000\004\004" +
    "\u0692\001\001\000\004\004\u0693\001\001\000\002\001\001" +
    "" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // QUERY_UPDATE ::= UPDATE Identificador SET Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA WHERE Identificador Op_relacional COMILLA Identificador COMILLA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_UPDATE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-38)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // QUERY_UPDATE ::= UPDATE Identificador SET Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA WHERE Identificador Op_relacional COMILLA Identificador COMILLA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_UPDATE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-32)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // QUERY_UPDATE ::= UPDATE Identificador SET Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA WHERE Identificador Op_relacional COMILLA Identificador COMILLA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_UPDATE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-26)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // QUERY_UPDATE ::= UPDATE Identificador SET Identificador Op_relacional COMILLA Identificador COMILLA COMA Identificador Op_relacional COMILLA Identificador COMILLA WHERE Identificador Op_relacional COMILLA Identificador COMILLA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_UPDATE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-20)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // QUERY_UPDATE ::= UPDATE Identificador SET Identificador Op_relacional COMILLA Identificador COMILLA WHERE Identificador Op_relacional COMILLA Identificador COMILLA P_coma 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_UPDATE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-14)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // QUERY_DELETE ::= DELETE FROM Identificador WHERE Identificador Op_relacional Numero 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_DELETE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // QUERY_DELETE ::= DELETE FROM Identificador WHERE Identificador Op_relacional COMILLA Identificador COMILLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_DELETE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // QUERY_DELETE ::= DELETE FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_DELETE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-72)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-73)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-98)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-99)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-19)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-73)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-59)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-31)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-53)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-43)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-23)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-51)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-43)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-35)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-19)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-199)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-171)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-143)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-115)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-87)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-135)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-113)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-91)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-69)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-111)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-93)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-75)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-57)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-87)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-73)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-59)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-31)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Identificador Identificador P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-72)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-58)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-44)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-30)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-52)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-42)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-32)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c COMA P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-22)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA COMA Numero P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-50)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-42)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-34)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c COMA P_a Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-198)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-170)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-142)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-114)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA Numero COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-86)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-134)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-112)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-90)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-68)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-110)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-92)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-74)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-56)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-38)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-20)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-86)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-72)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-58)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c COMA P_a COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA COMA COMILLA Identificador COMILLA P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-30)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // QUERY_INSERT ::= INSERT INTO Identificador VALUES P_a Identificador Identificador P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_INSERT",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // QUERY_WHERE ::= WHERE Identificador Op_relacional COMILLA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_WHERE",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-35)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-36)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c COMA FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-37)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c COMA FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-36)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-86)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-78)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-71)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-63)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-56)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-48)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-41)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-26)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-88)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-80)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-72)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-64)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-56)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-48)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-40)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-32)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-24)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-57)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-58)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-51)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-52)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-40)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-34)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-28)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-27)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY FOREIGN KEY P_a Identificador P_c REFERENCES Identificador P_a Identificador P_c P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-22)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-28)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c PRIMARY KEY COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL COMA Identificador T_dato P_a Numero P_c Op_logico NULL P_c GO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-36)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-129)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-123)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-117)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-111)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-105)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-99)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-93)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-87)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-81)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-75)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-69)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-63)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-57)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-51)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-27)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c COMA Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // QUERY_TABLE ::= CREATE TABLE Identificador P_a Identificador T_dato P_a Numero P_c P_c 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_TABLE",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // QUERY_SELECT ::= SELECT Identificador POINT Identificador COMA Identificador POINT Identificador FROM Identificador INNER JOIN Identificador ON Identificador POINT Identificador Op_relacional Identificador POINT Identificador INNER JOIN Identificador ON Identificador POINT Identificador Op_relacional Identificador POINT Identificador INNER JOIN Identificador ON Identificador POINT Identificador Op_relacional Identificador POINT Identificador WHERE Identificador POINT Identificador Op_relacional COMILLA Identificador COMILLA 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-50)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // QUERY_SELECT ::= SELECT Identificador POINT Identificador COMA FUN P_a Identificador POINT Identificador P_c AS Identificador FROM Identificador INNER JOIN Identificador ON Identificador POINT Identificador Op_relacional Identificador POINT Identificador GROUP BY Identificador POINT Identificador COMA Identificador POINT Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-34)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // QUERY_SELECT ::= SELECT Identificador POINT Identificador COMA Identificador POINT Identificador FROM Identificador WHERE Identificador C_seleccion Numero Op_logico Numero ORDER BY Identificador T_order 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-19)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // QUERY_SELECT ::= SELECT All FROM Identificador WHERE Identificador C_seleccion Numero Op_logico Numero ORDER BY Identificador T_order 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // QUERY_SELECT ::= SELECT Identificador COMA Identificador FROM Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // QUERY_SELECT ::= SELECT Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // QUERY_SELECT ::= SELECT Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // QUERY_SELECT ::= SELECT Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // QUERY_SELECT ::= SELECT Identificador COMA Identificador COMA Identificador COMA Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // QUERY_SELECT ::= SELECT Identificador COMA Identificador COMA Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // QUERY_SELECT ::= SELECT Identificador FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // QUERY_SELECT ::= SELECT All FROM Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_SELECT",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // QUERY_MAIN ::= 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // QUERY_MAIN ::= USE Identificador QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE QUERY_UPDATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // QUERY_MAIN ::= USE Identificador QUERY_DELETE QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // QUERY_MAIN ::= USE Identificador QUERY_DELETE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-14)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador COMA Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // QUERY_MAIN ::= DROP TABLE Identificador COMA Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // QUERY_MAIN ::= DROP TABLE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // QUERY_MAIN ::= DROP DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // QUERY_MAIN ::= DROP DATABASE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-16)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-14)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // QUERY_MAIN ::= USE Identificador QUERY_INSERT QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // QUERY_MAIN ::= USE Identificador QUERY_INSERT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-14)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // QUERY_MAIN ::= USE Identificador QUERY_SELECT QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // QUERY_MAIN ::= USE Identificador QUERY_SELECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // QUERY_MAIN ::= USE Identificador DROP DATABASE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-50)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-49)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-48)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-47)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-46)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-45)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-44)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-43)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-42)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-41)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-40)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-39)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-38)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-37)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-36)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-35)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-34)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-33)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-32)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-31)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-30)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-29)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-28)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-27)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-26)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-25)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-24)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-23)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-22)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-21)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-20)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-19)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-18)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-17)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-15)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-14)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-13)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-12)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-11)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-10)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-9)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-7)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-6)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // QUERY_MAIN ::= CREATE DATABASE Identificador USE Identificador QUERY_TABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // QUERY_MAIN ::= USE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // QUERY_MAIN ::= CREATE DATABASE Identificador 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("QUERY_MAIN",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= QUERY_MAIN EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

